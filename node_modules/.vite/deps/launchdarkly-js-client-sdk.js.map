{
  "version": 3,
  "sources": ["../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/errors.js", "../../launchdarkly-js-client-sdk/node_modules/base64-js/index.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/node_modules/fast-deep-equal/index.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/utils.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/rng.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/regex.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/validate.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/stringify.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/v1.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/parse.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/v35.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/md5.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/v3.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/sha1.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/v5.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/v4.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/nil.js", "../../launchdarkly-js-client-sdk/node_modules/uuid/dist/esm-browser/version.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/loggers.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/messages.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/configuration.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/headers.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/EventSender.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/context.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/EventSummarizer.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/attributeReference.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/ContextFilter.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/EventProcessor.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/EventEmitter.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/InitializationState.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/PersistentFlagStore.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/PersistentStorage.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/Stream.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/promiseCoalescer.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/Requestor.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/Identity.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/AnonymousContextProcessor.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/diagnosticEvents.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/SafeInspector.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/InspectorManager.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/timedPromise.js", "../../launchdarkly-js-client-sdk/node_modules/launchdarkly-js-sdk-common/src/index.js", "../../launchdarkly-js-client-sdk/src/basicLogger.js", "../../launchdarkly-js-client-sdk/src/httpRequest.js", "../../launchdarkly-js-client-sdk/node_modules/escape-string-regexp/index.js", "../../launchdarkly-js-client-sdk/src/GoalTracker.js", "../../launchdarkly-js-client-sdk/src/GoalManager.js", "../../launchdarkly-js-client-sdk/src/index.js", "../../launchdarkly-js-client-sdk/src/browserPlatform.js"],
  "sourcesContent": ["function createCustomError(name) {\n  function CustomError(message, code) {\n    Error.captureStackTrace && Error.captureStackTrace(this, this.constructor);\n    this.message = message;\n    this.code = code;\n  }\n\n  CustomError.prototype = new Error();\n  CustomError.prototype.name = name;\n  CustomError.prototype.constructor = CustomError;\n\n  return CustomError;\n}\n\nconst LDUnexpectedResponseError = createCustomError('LaunchDarklyUnexpectedResponseError');\nconst LDInvalidEnvironmentIdError = createCustomError('LaunchDarklyInvalidEnvironmentIdError');\nconst LDInvalidUserError = createCustomError('LaunchDarklyInvalidUserError');\nconst LDInvalidEventKeyError = createCustomError('LaunchDarklyInvalidEventKeyError');\nconst LDInvalidArgumentError = createCustomError('LaunchDarklyInvalidArgumentError');\nconst LDFlagFetchError = createCustomError('LaunchDarklyFlagFetchError');\nconst LDInvalidDataError = createCustomError('LaunchDarklyInvalidDataError');\nconst LDTimeoutError = createCustomError('LaunchDarklyTimeoutError');\n\nfunction isHttpErrorRecoverable(status) {\n  if (status >= 400 && status < 500) {\n    return status === 400 || status === 408 || status === 429;\n  }\n  return true;\n}\n\nmodule.exports = {\n  LDUnexpectedResponseError,\n  LDInvalidEnvironmentIdError,\n  LDInvalidUserError,\n  LDInvalidEventKeyError,\n  LDInvalidArgumentError,\n  LDInvalidDataError,\n  LDFlagFetchError,\n  LDTimeoutError,\n  isHttpErrorRecoverable,\n};\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "'use strict';\n\nvar isArray = Array.isArray;\nvar keyList = Object.keys;\nvar hasProp = Object.prototype.hasOwnProperty;\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    var arrA = isArray(a)\n      , arrB = isArray(b)\n      , i\n      , length\n      , key;\n\n    if (arrA && arrB) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n    if (arrA != arrB) return false;\n\n    var dateA = a instanceof Date\n      , dateB = b instanceof Date;\n    if (dateA != dateB) return false;\n    if (dateA && dateB) return a.getTime() == b.getTime();\n\n    var regexpA = a instanceof RegExp\n      , regexpB = b instanceof RegExp;\n    if (regexpA != regexpB) return false;\n    if (regexpA && regexpB) return a.toString() == b.toString();\n\n    var keys = keyList(a);\n    length = keys.length;\n\n    if (length !== keyList(b).length)\n      return false;\n\n    for (i = length; i-- !== 0;)\n      if (!hasProp.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      key = keys[i];\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  return a!==a && b!==b;\n};\n", "const base64 = require('base64-js');\nconst fastDeepEqual = require('fast-deep-equal');\n\nconst userAttrsToStringify = ['key', 'ip', 'country', 'email', 'firstName', 'lastName', 'avatar', 'name'];\n\nfunction appendUrlPath(baseUrl, path) {\n  // Ensure that URL concatenation is done correctly regardless of whether the\n  // base URL has a trailing slash or not.\n  const trimBaseUrl = baseUrl.endsWith('/') ? baseUrl.substring(0, baseUrl.length - 1) : baseUrl;\n  return trimBaseUrl + (path.startsWith('/') ? '' : '/') + path;\n}\n\n// See http://ecmanaut.blogspot.com/2006/07/encoding-decoding-utf8-in-javascript.html\nfunction btoa(s) {\n  const escaped = unescape(encodeURIComponent(s));\n  return base64.fromByteArray(stringToBytes(escaped));\n}\n\nfunction stringToBytes(s) {\n  const b = [];\n  for (let i = 0; i < s.length; i++) {\n    b.push(s.charCodeAt(i));\n  }\n  return b;\n}\n\nfunction base64URLEncode(s) {\n  return (\n    btoa(s)\n      // eslint-disable-next-line\n      .replace(/=/g, '')\n      .replace(/\\+/g, '-')\n      .replace(/\\//g, '_')\n  );\n}\n\nfunction clone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction deepEquals(a, b) {\n  return fastDeepEqual(a, b);\n}\n\n// Events emitted in LDClient's initialize method will happen before the consumer\n// can register a listener, so defer them to next tick.\nfunction onNextTick(cb) {\n  setTimeout(cb, 0);\n}\n\n/**\n * Wrap a promise to invoke an optional callback upon resolution or rejection.\n *\n * This function assumes the callback follows the Node.js callback type: (err, value) => void\n *\n * If a callback is provided:\n *   - if the promise is resolved, invoke the callback with (null, value)\n *   - if the promise is rejected, invoke the callback with (error, null)\n *\n * @param {Promise<any>} promise\n * @param {Function} callback\n * @returns Promise<any> | undefined\n */\nfunction wrapPromiseCallback(promise, callback) {\n  const ret = promise.then(\n    value => {\n      if (callback) {\n        setTimeout(() => {\n          callback(null, value);\n        }, 0);\n      }\n      return value;\n    },\n    error => {\n      if (callback) {\n        setTimeout(() => {\n          callback(error, null);\n        }, 0);\n      } else {\n        return Promise.reject(error);\n      }\n    }\n  );\n\n  return !callback ? ret : undefined;\n}\n\n/**\n * Takes a map of flag keys to values, and returns the more verbose structure used by the\n * client stream.\n */\nfunction transformValuesToVersionedValues(flags) {\n  const ret = {};\n  for (const key in flags) {\n    if (objectHasOwnProperty(flags, key)) {\n      ret[key] = { value: flags[key], version: 0 };\n    }\n  }\n  return ret;\n}\n\n/**\n * Converts the internal flag state map to a simple map of flag keys to values.\n */\nfunction transformVersionedValuesToValues(flagsState) {\n  const ret = {};\n  for (const key in flagsState) {\n    if (objectHasOwnProperty(flagsState, key)) {\n      ret[key] = flagsState[key].value;\n    }\n  }\n  return ret;\n}\n\nfunction getLDUserAgentString(platform) {\n  const version = platform.version || '?';\n  return platform.userAgent + '/' + version;\n}\n\nfunction extend(...objects) {\n  return objects.reduce((acc, obj) => ({ ...acc, ...obj }), {});\n}\n\nfunction objectHasOwnProperty(object, name) {\n  return Object.prototype.hasOwnProperty.call(object, name);\n}\n\nfunction sanitizeContext(context) {\n  if (!context) {\n    return context;\n  }\n  let newContext;\n  // Only stringify user attributes for legacy users.\n  if (context.kind === null || context.kind === undefined) {\n    userAttrsToStringify.forEach(attr => {\n      const value = context[attr];\n      if (value !== undefined && typeof value !== 'string') {\n        newContext = newContext || { ...context };\n        newContext[attr] = String(value);\n      }\n    });\n  }\n\n  return newContext || context;\n}\n\nmodule.exports = {\n  appendUrlPath,\n  base64URLEncode,\n  btoa,\n  clone,\n  deepEquals,\n  extend,\n  getLDUserAgentString,\n  objectHasOwnProperty,\n  onNextTick,\n  sanitizeContext,\n  transformValuesToVersionedValues,\n  transformVersionedValuesToValues,\n  wrapPromiseCallback,\n};\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;", "export default '00000000-0000-0000-0000-000000000000';", "import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;", "const logLevels = ['debug', 'info', 'warn', 'error', 'none'];\n\n/**\n * A simple logger that writes to stderr.\n */\nfunction commonBasicLogger(options, formatFn) {\n  if (options && options.destination && typeof options.destination !== 'function') {\n    throw new Error('destination for basicLogger was set to a non-function');\n  }\n\n  function toConsole(methodName) {\n    // The global console variable is not guaranteed to be defined at all times in all browsers:\n    // https://www.beyondjava.net/console-log-surprises-with-internet-explorer-11-and-edge\n    return function(line) {\n      if (console && console[methodName]) {\n        console[methodName].call(console, line);\n      }\n    };\n  }\n  const destinations =\n    options && options.destination\n      ? [options.destination, options.destination, options.destination, options.destination]\n      : [toConsole('log'), toConsole('info'), toConsole('warn'), toConsole('error')];\n  const prependLevelToMessage = !!(options && options.destination); // if we're writing to console.warn, etc. we don't need the prefix\n  const prefix =\n    !options || options.prefix === undefined || options.prefix === null ? '[LaunchDarkly] ' : options.prefix;\n\n  let minLevel = 1; // default is 'info'\n  if (options && options.level) {\n    for (let i = 0; i < logLevels.length; i++) {\n      if (logLevels[i] === options.level) {\n        minLevel = i;\n      }\n    }\n  }\n\n  function write(levelIndex, levelName, args) {\n    if (args.length < 1) {\n      return;\n    }\n    let line;\n    const fullPrefix = prependLevelToMessage ? levelName + ': ' + prefix : prefix;\n    if (args.length === 1 || !formatFn) {\n      line = fullPrefix + args[0];\n    } else {\n      const tempArgs = [...args];\n      tempArgs[0] = fullPrefix + tempArgs[0];\n      line = formatFn(...tempArgs);\n    }\n    try {\n      destinations[levelIndex](line);\n    } catch (err) {\n      console &&\n        console.log &&\n        console.log(\"[LaunchDarkly] Configured logger's \" + levelName + ' method threw an exception: ' + err);\n    }\n  }\n\n  const logger = {};\n  for (let i = 0; i < logLevels.length; i++) {\n    const levelName = logLevels[i];\n    if (levelName !== 'none') {\n      if (i < minLevel) {\n        logger[levelName] = () => {};\n      } else {\n        const levelIndex = i;\n        logger[levelName] = function() {\n          // can't use arrow function with \"arguments\"\n          write(levelIndex, levelName, arguments);\n        };\n      }\n    }\n  }\n\n  return logger;\n}\n\nfunction validateLogger(logger) {\n  logLevels.forEach(level => {\n    if (level !== 'none' && (!logger[level] || typeof logger[level] !== 'function')) {\n      throw new Error('Provided logger instance must support logger.' + level + '(...) method');\n      // Note that the SDK normally does not throw exceptions to the application, but that rule\n      // does not apply to LDClient.init() which will throw an exception if the parameters are so\n      // invalid that we cannot proceed with creating the client. An invalid logger meets those\n      // criteria since the SDK calls the logger during nearly all of its operations.\n    }\n  });\n}\n\nmodule.exports = {\n  commonBasicLogger,\n  validateLogger,\n};\n", "const errors = require('./errors');\n\nfunction errorString(err) {\n  if (err && err.message) {\n    return err.message;\n  }\n  if (typeof err === 'string' || err instanceof String) {\n    return err;\n  }\n  return JSON.stringify(err);\n}\n\nconst clientInitialized = function() {\n  return 'LaunchDarkly client initialized';\n};\n\nconst docLink =\n  ' Please see https://docs.launchdarkly.com/sdk/client-side/javascript#initialize-the-client for instructions on SDK initialization.';\n\nconst clientNotReady = function() {\n  return 'LaunchDarkly client is not ready';\n};\n\nconst eventCapacityExceeded = function() {\n  return 'Exceeded event queue capacity. Increase capacity to avoid dropping events.';\n};\n\nconst eventWithoutContext = function() {\n  return 'Be sure to call `identify` in the LaunchDarkly client: https://docs.launchdarkly.com/sdk/features/identify#javascript';\n};\n\nconst invalidContentType = function(contentType) {\n  return 'Expected application/json content type but got \"' + contentType + '\"';\n};\n\nconst invalidKey = function() {\n  return 'Event key must be a string';\n};\n\nconst localStorageUnavailable = function(err) {\n  return 'local storage is unavailable: ' + errorString(err);\n};\n\nconst networkError = e => 'network error' + (e ? ' (' + e + ')' : '');\n\n// We should remove unknownCustomEventKey in the future - see comments in track() in index.js\nconst unknownCustomEventKey = function(key) {\n  return 'Custom event \"' + key + '\" does not exist';\n};\n\nconst environmentNotFound = function() {\n  return 'Environment not found. Double check that you specified a valid environment/client-side ID.' + docLink;\n};\n\nconst environmentNotSpecified = function() {\n  return 'No environment/client-side ID was specified.' + docLink;\n};\n\nconst errorFetchingFlags = function(err) {\n  return 'Error fetching flag settings: ' + errorString(err);\n};\n\nconst contextNotSpecified = function() {\n  return 'No context specified.' + docLink;\n};\n\nconst invalidContext = function() {\n  return 'Invalid context specified.' + docLink;\n};\n\nconst invalidData = function() {\n  return 'Invalid data received from LaunchDarkly; connection may have been interrupted';\n};\n\nconst bootstrapOldFormat = function() {\n  return (\n    'LaunchDarkly client was initialized with bootstrap data that did not include flag metadata. ' +\n    'Events may not be sent correctly.' +\n    docLink\n  );\n};\n\nconst bootstrapInvalid = function() {\n  return 'LaunchDarkly bootstrap data is not available because the back end could not read the flags.';\n};\n\nconst deprecated = function(oldName, newName) {\n  if (newName) {\n    return '\"' + oldName + '\" is deprecated, please use \"' + newName + '\"';\n  }\n  return '\"' + oldName + '\" is deprecated';\n};\n\nconst httpErrorMessage = function(status, context, retryMessage) {\n  return (\n    'Received error ' +\n    status +\n    (status === 401 ? ' (invalid SDK key)' : '') +\n    ' for ' +\n    context +\n    ' - ' +\n    (errors.isHttpErrorRecoverable(status) ? retryMessage : 'giving up permanently')\n  );\n};\n\nconst httpUnavailable = function() {\n  return 'Cannot make HTTP requests in this environment.' + docLink;\n};\n\nconst identifyDisabled = function() {\n  return 'identify() has no effect here; it must be called on the main client instance';\n};\n\nconst streamClosing = function() {\n  return 'Closing stream connection';\n};\n\nconst streamConnecting = function(url) {\n  return 'Opening stream connection to ' + url;\n};\n\nconst streamError = function(err, streamReconnectDelay) {\n  return (\n    'Error on stream connection: ' +\n    errorString(err) +\n    ', will continue retrying after ' +\n    streamReconnectDelay +\n    ' milliseconds.'\n  );\n};\n\nconst unknownOption = name => 'Ignoring unknown config option \"' + name + '\"';\n\nconst unrecoverableStreamError = err => `Error on stream connection ${errorString(err)}, giving up permanently`;\n\nconst wrongOptionType = (name, expectedType, actualType) =>\n  'Config option \"' + name + '\" should be of type ' + expectedType + ', got ' + actualType + ', using default value';\n\nconst wrongOptionTypeBoolean = (name, actualType) =>\n  'Config option \"' + name + '\" should be a boolean, got ' + actualType + ', converting to boolean';\n\nconst optionBelowMinimum = (name, value, minimum) =>\n  'Config option \"' + name + '\" was set to ' + value + ', changing to minimum value of ' + minimum;\n\nconst debugPolling = function(url) {\n  return 'polling for feature flags at ' + url;\n};\n\nconst debugStreamPing = function() {\n  return 'received ping message from stream';\n};\n\nconst debugStreamPut = function() {\n  return 'received streaming update for all flags';\n};\n\nconst debugStreamPatch = function(key) {\n  return 'received streaming update for flag \"' + key + '\"';\n};\n\nconst debugStreamPatchIgnored = function(key) {\n  return 'received streaming update for flag \"' + key + '\" but ignored due to version check';\n};\n\nconst debugStreamDelete = function(key) {\n  return 'received streaming deletion for flag \"' + key + '\"';\n};\n\nconst debugStreamDeleteIgnored = function(key) {\n  return 'received streaming deletion for flag \"' + key + '\" but ignored due to version check';\n};\n\nconst debugEnqueueingEvent = function(kind) {\n  return 'enqueueing \"' + kind + '\" event';\n};\n\nconst debugPostingEvents = function(count) {\n  return 'sending ' + count + ' events';\n};\n\nconst debugPostingDiagnosticEvent = function(event) {\n  return 'sending diagnostic event (' + event.kind + ')';\n};\n\nconst invalidInspector = (type, name) => `an inspector: \"${name}\" of an invalid type (${type}) was configured`;\n\nconst inspectorMethodError = (type, name) => `an inspector: \"${name}\" of type: \"${type}\" generated an exception`;\n\nconst invalidTagValue = name => `Config option \"${name}\" must only contain letters, numbers, ., _ or -.`;\n\nconst tagValueTooLong = name => `Value of \"${name}\" was longer than 64 characters and was discarded.`;\n\nconst invalidMetricValue = badType =>\n  `The track function was called with a non-numeric \"metricValue\" (${badType}), only numeric metric values are supported.`;\n\nmodule.exports = {\n  bootstrapInvalid,\n  bootstrapOldFormat,\n  clientInitialized,\n  clientNotReady,\n  debugEnqueueingEvent,\n  debugPostingDiagnosticEvent,\n  debugPostingEvents,\n  debugStreamDelete,\n  debugStreamDeleteIgnored,\n  debugStreamPatch,\n  debugStreamPatchIgnored,\n  debugStreamPing,\n  debugPolling,\n  debugStreamPut,\n  deprecated,\n  environmentNotFound,\n  environmentNotSpecified,\n  errorFetchingFlags,\n  eventCapacityExceeded,\n  eventWithoutContext,\n  httpErrorMessage,\n  httpUnavailable,\n  identifyDisabled,\n  inspectorMethodError,\n  invalidContentType,\n  invalidData,\n  invalidInspector,\n  invalidKey,\n  invalidMetricValue,\n  invalidContext,\n  invalidTagValue,\n  localStorageUnavailable,\n  networkError,\n  optionBelowMinimum,\n  streamClosing,\n  streamConnecting,\n  streamError,\n  tagValueTooLong,\n  unknownCustomEventKey,\n  unknownOption,\n  contextNotSpecified,\n  unrecoverableStreamError,\n  wrongOptionType,\n  wrongOptionTypeBoolean,\n};\n", "const errors = require('./errors');\nconst { validateLogger } = require('./loggers');\nconst messages = require('./messages');\nconst utils = require('./utils');\n\n// baseOptionDefs should contain an entry for each supported configuration option in the common package.\n// Each entry can have three properties:\n// - \"default\": the default value if any\n// - \"type\": a type constraint used if the type can't be inferred from the default value). The allowable\n//   values are \"boolean\", \"string\", \"number\", \"array\", \"object\", \"function\", or several of these OR'd\n//   together with \"|\" (\"function|object\").\n// - \"minimum\": minimum value if any for numeric properties\n//\n// The extraOptionDefs parameter to validate() uses the same format.\nconst baseOptionDefs = {\n  baseUrl: { default: 'https://app.launchdarkly.com' },\n  streamUrl: { default: 'https://clientstream.launchdarkly.com' },\n  eventsUrl: { default: 'https://events.launchdarkly.com' },\n  sendEvents: { default: true },\n  streaming: { type: 'boolean' }, // default for this is undefined, which is different from false\n  sendLDHeaders: { default: true },\n  requestHeaderTransform: { type: 'function' },\n  sendEventsOnlyForVariation: { default: false },\n  useReport: { default: false },\n  evaluationReasons: { default: false },\n  eventCapacity: { default: 100, minimum: 1 },\n  flushInterval: { default: 2000, minimum: 2000 },\n  samplingInterval: { default: 0, minimum: 0 },\n  streamReconnectDelay: { default: 1000, minimum: 0 },\n  allAttributesPrivate: { default: false },\n  privateAttributes: { default: [] },\n  bootstrap: { type: 'string|object' },\n  diagnosticRecordingInterval: { default: 900000, minimum: 2000 },\n  diagnosticOptOut: { default: false },\n  wrapperName: { type: 'string' },\n  wrapperVersion: { type: 'string' },\n  stateProvider: { type: 'object' }, // not a public option, used internally\n  application: { validator: applicationConfigValidator },\n  inspectors: { default: [] },\n};\n\n/**\n * Expression to validate characters that are allowed in tag keys and values.\n */\nconst allowedTagCharacters = /^(\\w|\\.|-)+$/;\n\nfunction canonicalizeUrl(url) {\n  return url && url.replace(/\\/+$/, '');\n}\n\n/**\n * Verify that a value meets the requirements for a tag value.\n * @param {string} tagValue\n * @param {Object} logger\n */\nfunction validateTagValue(name, tagValue, logger) {\n  if (typeof tagValue !== 'string' || !tagValue.match(allowedTagCharacters)) {\n    logger.warn(messages.invalidTagValue(name));\n    return undefined;\n  }\n  if (tagValue.length > 64) {\n    logger.warn(messages.tagValueTooLong(name));\n    return undefined;\n  }\n  return tagValue;\n}\n\nfunction applicationConfigValidator(name, value, logger) {\n  const validated = {};\n  if (value.id) {\n    validated.id = validateTagValue(`${name}.id`, value.id, logger);\n  }\n  if (value.version) {\n    validated.version = validateTagValue(`${name}.version`, value.version, logger);\n  }\n  return validated;\n}\n\nfunction validate(options, emitter, extraOptionDefs, logger) {\n  const optionDefs = utils.extend({ logger: { default: logger } }, baseOptionDefs, extraOptionDefs);\n\n  const deprecatedOptions = {\n    // As of the latest major version, there are no deprecated options. Next time we deprecate\n    // something, add an item here where the property name is the deprecated name, and the\n    // property value is the preferred name if any, or null/undefined if there is no replacement.\n  };\n\n  function checkDeprecatedOptions(config) {\n    const opts = config;\n    Object.keys(deprecatedOptions).forEach(oldName => {\n      if (opts[oldName] !== undefined) {\n        const newName = deprecatedOptions[oldName];\n        logger && logger.warn(messages.deprecated(oldName, newName));\n        if (newName) {\n          if (opts[newName] === undefined) {\n            opts[newName] = opts[oldName];\n          }\n          delete opts[oldName];\n        }\n      }\n    });\n  }\n\n  function applyDefaults(config) {\n    // This works differently from utils.extend() in that it *will not* override a default value\n    // if the provided value is explicitly set to null. This provides backward compatibility\n    // since in the past we only used the provided values if they were truthy.\n    const ret = utils.extend({}, config);\n    Object.keys(optionDefs).forEach(name => {\n      if (ret[name] === undefined || ret[name] === null) {\n        ret[name] = optionDefs[name] && optionDefs[name].default;\n      }\n    });\n    return ret;\n  }\n\n  function validateTypesAndNames(config) {\n    const ret = utils.extend({}, config);\n    const typeDescForValue = value => {\n      if (value === null) {\n        return 'any';\n      }\n      if (value === undefined) {\n        return undefined;\n      }\n      if (Array.isArray(value)) {\n        return 'array';\n      }\n      const t = typeof value;\n      if (t === 'boolean' || t === 'string' || t === 'number' || t === 'function') {\n        return t;\n      }\n      return 'object';\n    };\n    Object.keys(config).forEach(name => {\n      const value = config[name];\n      if (value !== null && value !== undefined) {\n        const optionDef = optionDefs[name];\n        if (optionDef === undefined) {\n          reportArgumentError(messages.unknownOption(name));\n        } else {\n          const expectedType = optionDef.type || typeDescForValue(optionDef.default);\n          const validator = optionDef.validator;\n          if (validator) {\n            const validated = validator(name, config[name], logger);\n            if (validated !== undefined) {\n              ret[name] = validated;\n            } else {\n              delete ret[name];\n            }\n          } else if (expectedType !== 'any') {\n            const allowedTypes = expectedType.split('|');\n            const actualType = typeDescForValue(value);\n            if (allowedTypes.indexOf(actualType) < 0) {\n              if (expectedType === 'boolean') {\n                ret[name] = !!value;\n                reportArgumentError(messages.wrongOptionTypeBoolean(name, actualType));\n              } else {\n                reportArgumentError(messages.wrongOptionType(name, expectedType, actualType));\n                ret[name] = optionDef.default;\n              }\n            } else {\n              if (actualType === 'number' && optionDef.minimum !== undefined && value < optionDef.minimum) {\n                reportArgumentError(messages.optionBelowMinimum(name, value, optionDef.minimum));\n                ret[name] = optionDef.minimum;\n              }\n            }\n          }\n        }\n      }\n    });\n\n    ret.baseUrl = canonicalizeUrl(ret.baseUrl);\n    ret.streamUrl = canonicalizeUrl(ret.streamUrl);\n    ret.eventsUrl = canonicalizeUrl(ret.eventsUrl);\n\n    return ret;\n  }\n\n  function reportArgumentError(message) {\n    utils.onNextTick(() => {\n      emitter && emitter.maybeReportError(new errors.LDInvalidArgumentError(message));\n    });\n  }\n\n  let config = utils.extend({}, options || {});\n\n  checkDeprecatedOptions(config);\n\n  config = applyDefaults(config);\n  config = validateTypesAndNames(config);\n  validateLogger(config.logger);\n\n  return config;\n}\n\n/**\n * Get tags for the specified configuration.\n *\n * If any additional tags are added to the configuration, then the tags from\n * this method should be extended with those.\n * @param {Object} config The already valiated configuration.\n * @returns {Object} The tag configuration.\n */\nfunction getTags(config) {\n  const tags = {};\n  if (config) {\n    if (config.application && config.application.id !== undefined && config.application.id !== null) {\n      tags['application-id'] = [config.application.id];\n    }\n    if (config.application && config.application.version !== undefined && config.application.id !== null) {\n      tags['application-version'] = [config.application.version];\n    }\n  }\n\n  return tags;\n}\n\nmodule.exports = {\n  baseOptionDefs,\n  validate,\n  getTags,\n};\n", "const { getLDUserAgentString } = require('./utils');\nconst configuration = require('./configuration');\n\nfunction getLDHeaders(platform, options) {\n  if (options && !options.sendLDHeaders) {\n    return {};\n  }\n  const h = {};\n  h[platform.userAgentHeaderName || 'User-Agent'] = getLDUserAgentString(platform);\n  if (options && options.wrapperName) {\n    h['X-LaunchDarkly-Wrapper'] = options.wrapperVersion\n      ? options.wrapperName + '/' + options.wrapperVersion\n      : options.wrapperName;\n  }\n  const tags = configuration.getTags(options);\n  const tagKeys = Object.keys(tags);\n  if (tagKeys.length) {\n    h['x-launchdarkly-tags'] = tagKeys\n      .sort()\n      .map(key =>\n        Array.isArray(tags[key]) ? tags[key].sort().map(value => `${key}/${value}`) : [`${key}/${tags[key]}`]\n      )\n      .reduce((flattened, item) => flattened.concat(item), [])\n      .join(' ');\n  }\n  return h;\n}\n\nfunction transformHeaders(headers, options) {\n  if (!options || !options.requestHeaderTransform) {\n    return headers;\n  }\n  return options.requestHeaderTransform({ ...headers });\n}\n\nmodule.exports = {\n  getLDHeaders,\n  transformHeaders,\n};\n", "const errors = require('./errors');\nconst utils = require('./utils');\nconst { v1: uuidv1 } = require('uuid');\nconst { getLDHeaders, transformHeaders } = require('./headers');\n\nfunction EventSender(platform, environmentId, options) {\n  const baseHeaders = utils.extend({ 'Content-Type': 'application/json' }, getLDHeaders(platform, options));\n  const sender = {};\n\n  function getResponseInfo(result) {\n    const ret = { status: result.status };\n    const dateStr = result.header('date');\n    if (dateStr) {\n      const time = Date.parse(dateStr);\n      if (time) {\n        ret.serverTime = time;\n      }\n    }\n    return ret;\n  }\n\n  sender.sendEvents = (events, url, isDiagnostic) => {\n    if (!platform.httpRequest) {\n      return Promise.resolve();\n    }\n\n    const jsonBody = JSON.stringify(events);\n    const payloadId = isDiagnostic ? null : uuidv1();\n\n    function doPostRequest(canRetry) {\n      const headers = isDiagnostic\n        ? baseHeaders\n        : utils.extend({}, baseHeaders, {\n            'X-LaunchDarkly-Event-Schema': '4',\n            'X-LaunchDarkly-Payload-ID': payloadId,\n          });\n      return platform\n        .httpRequest('POST', url, transformHeaders(headers, options), jsonBody)\n        .promise.then(result => {\n          if (!result) {\n            // This was a response from a fire-and-forget request, so we won't have a status.\n            return;\n          }\n          if (result.status >= 400 && errors.isHttpErrorRecoverable(result.status) && canRetry) {\n            return doPostRequest(false);\n          } else {\n            return getResponseInfo(result);\n          }\n        })\n        .catch(() => {\n          if (canRetry) {\n            return doPostRequest(false);\n          }\n          return Promise.reject();\n        });\n    }\n\n    return doPostRequest(true).catch(() => {});\n  };\n\n  return sender;\n}\n\nmodule.exports = EventSender;\n", "/**\n * Validate a context kind.\n * @param {string} kind\n * @returns true if the kind is valid.\n */\nconst { commonBasicLogger } = require('./loggers');\n\nfunction validKind(kind) {\n  return typeof kind === 'string' && kind !== 'kind' && kind.match(/^(\\w|\\.|-)+$/);\n}\n\n/**\n * Perform a check of basic context requirements.\n * @param {Object} context\n * @param {boolean} allowLegacyKey If true, then a legacy user can have an\n * empty or non-string key. A legacy user is a context without a kind.\n * @returns true if the context meets basic requirements.\n */\nfunction checkContext(context, allowLegacyKey) {\n  if (context) {\n    if (allowLegacyKey && (context.kind === undefined || context.kind === null)) {\n      return context.key !== undefined && context.key !== null;\n    }\n    const key = context.key;\n    const kind = context.kind === undefined ? 'user' : context.kind;\n    const kindValid = validKind(kind);\n    const keyValid = kind === 'multi' || (key !== undefined && key !== null && key !== '');\n    if (kind === 'multi') {\n      const kinds = Object.keys(context).filter(key => key !== 'kind');\n      return (\n        keyValid &&\n        kinds.every(key => validKind(key)) &&\n        kinds.every(key => {\n          const contextKey = context[key].key;\n          return contextKey !== undefined && contextKey !== null && contextKey !== '';\n        })\n      );\n    }\n    return keyValid && kindValid;\n  }\n  return false;\n}\n\n/**\n * For a given context get a list of context kinds.\n * @param {Object} context\n * @returns A list of kinds in the context.\n */\nfunction getContextKinds(context) {\n  if (context) {\n    if (context.kind === null || context.kind === undefined) {\n      return ['user'];\n    }\n    if (context.kind !== 'multi') {\n      return [context.kind];\n    }\n    return Object.keys(context).filter(kind => kind !== 'kind');\n  }\n  return [];\n}\n\n/**\n * The partial URL encoding is needed because : is a valid character in context keys.\n *\n * Partial encoding is the replacement of all colon (:) characters with the URL\n * encoded equivalent (%3A) and all percent (%) characters with the URL encoded\n * equivalent (%25).\n * @param {string} key The key to encode.\n * @returns {string} Partially URL encoded key.\n */\nfunction encodeKey(key) {\n  if (key.includes('%') || key.includes(':')) {\n    return key.replace(/%/g, '%25').replace(/:/g, '%3A');\n  }\n  return key;\n}\n\nfunction getCanonicalKey(context) {\n  if (context) {\n    if ((context.kind === undefined || context.kind === null || context.kind === 'user') && context.key) {\n      return context.key;\n    } else if (context.kind !== 'multi' && context.key) {\n      return `${context.kind}:${encodeKey(context.key)}`;\n    } else if (context.kind === 'multi') {\n      return Object.keys(context)\n        .sort()\n        .filter(key => key !== 'kind')\n        .map(key => `${key}:${encodeKey(context[key].key)}`)\n        .join(':');\n    }\n  }\n}\n\nfunction getContextKeys(context, logger = commonBasicLogger()) {\n  if (!context) {\n    return undefined;\n  }\n\n  const keys = {};\n  const { kind, key } = context;\n\n  switch (kind) {\n    case undefined:\n      keys.user = `${key}`;\n      break;\n    case 'multi':\n      Object.entries(context)\n        .filter(([key]) => key !== 'kind')\n        .forEach(([key, value]) => {\n          if (value && value.key) {\n            keys[key] = value.key;\n          }\n        });\n      break;\n    case null:\n      logger.warn(`null is not a valid context kind: ${context}`);\n      break;\n    case '':\n      logger.warn(`'' is not a valid context kind: ${context}`);\n      break;\n    default:\n      keys[kind] = `${key}`;\n      break;\n  }\n\n  return keys;\n}\n\nmodule.exports = {\n  checkContext,\n  getContextKeys,\n  getContextKinds,\n  getCanonicalKey,\n};\n", "const { getContextKinds } = require('./context');\n\nfunction getKinds(event) {\n  if (event.context) {\n    return getContextKinds(event.context);\n  }\n  if (event.contextKeys) {\n    return Object.keys(event.contextKeys);\n  }\n  return [];\n}\n\nfunction EventSummarizer() {\n  const es = {};\n\n  let startDate = 0,\n    endDate = 0,\n    counters = {},\n    contextKinds = {};\n\n  es.summarizeEvent = event => {\n    if (event.kind === 'feature') {\n      const counterKey =\n        event.key +\n        ':' +\n        (event.variation !== null && event.variation !== undefined ? event.variation : '') +\n        ':' +\n        (event.version !== null && event.version !== undefined ? event.version : '');\n      const counterVal = counters[counterKey];\n      let kinds = contextKinds[event.key];\n      if (!kinds) {\n        kinds = new Set();\n        contextKinds[event.key] = kinds;\n      }\n      getKinds(event).forEach(kind => kinds.add(kind));\n\n      if (counterVal) {\n        counterVal.count = counterVal.count + 1;\n      } else {\n        counters[counterKey] = {\n          count: 1,\n          key: event.key,\n          version: event.version,\n          variation: event.variation,\n          value: event.value,\n          default: event.default,\n        };\n      }\n      if (startDate === 0 || event.creationDate < startDate) {\n        startDate = event.creationDate;\n      }\n      if (event.creationDate > endDate) {\n        endDate = event.creationDate;\n      }\n    }\n  };\n\n  es.getSummary = () => {\n    const flagsOut = {};\n    let empty = true;\n    for (const c of Object.values(counters)) {\n      let flag = flagsOut[c.key];\n      if (!flag) {\n        flag = {\n          default: c.default,\n          counters: [],\n          contextKinds: [...contextKinds[c.key]],\n        };\n        flagsOut[c.key] = flag;\n      }\n      const counterOut = {\n        value: c.value,\n        count: c.count,\n      };\n      if (c.variation !== undefined && c.variation !== null) {\n        counterOut.variation = c.variation;\n      }\n      if (c.version !== undefined && c.version !== null) {\n        counterOut.version = c.version;\n      } else {\n        counterOut.unknown = true;\n      }\n      flag.counters.push(counterOut);\n      empty = false;\n    }\n    return empty\n      ? null\n      : {\n          startDate,\n          endDate,\n          features: flagsOut,\n        };\n  };\n\n  es.clearSummary = () => {\n    startDate = 0;\n    endDate = 0;\n    counters = {};\n    contextKinds = {};\n  };\n\n  return es;\n}\n\nmodule.exports = EventSummarizer;\n", "/**\n * Take a key string and escape the characters to allow it to be used as a reference.\n * @param {string} key\n * @returns {string} The processed key.\n */\nfunction processEscapeCharacters(key) {\n  return key.replace(/~/g, '~0').replace(/\\//g, '~1');\n}\n\n/**\n * @param {string} reference The reference to get the components of.\n * @returns {string[]} The components of the reference. Escape characters will be converted to their representative values.\n */\nfunction getComponents(reference) {\n  const referenceWithoutPrefix = reference.startsWith('/') ? reference.substring(1) : reference;\n  return referenceWithoutPrefix\n    .split('/')\n    .map(component => (component.indexOf('~') >= 0 ? component.replace(/~1/g, '/').replace(/~0/g, '~') : component));\n}\n\n/**\n * @param {string} reference The reference to check if it is a literal.\n * @returns true if the reference is a literal.\n */\nfunction isLiteral(reference) {\n  return !reference.startsWith('/');\n}\n\n/**\n * Compare two references and determine if they are equivalent.\n * @param {string} a\n * @param {string} b\n */\nfunction compare(a, b) {\n  const aIsLiteral = isLiteral(a);\n  const bIsLiteral = isLiteral(b);\n  if (aIsLiteral && bIsLiteral) {\n    return a === b;\n  }\n  if (aIsLiteral) {\n    const bComponents = getComponents(b);\n    if (bComponents.length !== 1) {\n      return false;\n    }\n    return a === bComponents[0];\n  }\n  if (bIsLiteral) {\n    const aComponents = getComponents(a);\n    if (aComponents.length !== 1) {\n      return false;\n    }\n    return b === aComponents[0];\n  }\n  return a === b;\n}\n\n/**\n * @param {string} a\n * @param {string} b\n * @returns The two strings joined by '/'.\n */\nfunction join(a, b) {\n  return `${a}/${b}`;\n}\n\n/**\n * There are cases where a field could have been named with a preceeding '/'.\n * If that attribute was private, then the literal would appear to be a reference.\n * This method can be used to convert a literal to a reference in such situations.\n * @param {string} literal The literal to convert to a reference.\n * @returns A literal which has been converted to a reference.\n */\nfunction literalToReference(literal) {\n  return `/${processEscapeCharacters(literal)}`;\n}\n\n/**\n * Clone an object excluding the values referenced by a list of references.\n * @param {Object} target The object to clone.\n * @param {string[]} references A list of references from the cloned object.\n * @returns {{cloned: Object, excluded: string[]}} The cloned object and a list of excluded values.\n */\nfunction cloneExcluding(target, references) {\n  const stack = [];\n  const cloned = {};\n  const excluded = [];\n\n  stack.push(\n    ...Object.keys(target).map(key => ({\n      key,\n      ptr: literalToReference(key),\n      source: target,\n      parent: cloned,\n      visited: [target],\n    }))\n  );\n\n  while (stack.length) {\n    const item = stack.pop();\n    if (!references.some(ptr => compare(ptr, item.ptr))) {\n      const value = item.source[item.key];\n\n      // Handle null because it overlaps with object, which we will want to handle later.\n      if (value === null) {\n        item.parent[item.key] = value;\n      } else if (Array.isArray(value)) {\n        item.parent[item.key] = [...value];\n      } else if (typeof value === 'object') {\n        //Arrays and null must already be handled.\n\n        //Prevent cycles by not visiting the same object\n        //with in the same branch. Parallel branches\n        //may contain the same object.\n        if (item.visited.includes(value)) {\n          continue;\n        }\n\n        item.parent[item.key] = {};\n\n        stack.push(\n          ...Object.keys(value).map(key => ({\n            key,\n            ptr: join(item.ptr, processEscapeCharacters(key)),\n            source: value,\n            parent: item.parent[item.key],\n            visited: [...item.visited, value],\n          }))\n        );\n      } else {\n        item.parent[item.key] = value;\n      }\n    } else {\n      excluded.push(item.ptr);\n    }\n  }\n  return { cloned, excluded: excluded.sort() };\n}\n\nmodule.exports = {\n  cloneExcluding,\n  compare,\n  literalToReference,\n};\n", "const AttributeReference = require('./attributeReference');\n\nfunction ContextFilter(config) {\n  const filter = {};\n\n  const allAttributesPrivate = config.allAttributesPrivate;\n  const privateAttributes = config.privateAttributes || [];\n\n  // These attributes cannot be removed via a private attribute.\n  const protectedAttributes = ['key', 'kind', '_meta', 'anonymous'];\n\n  const legacyTopLevelCopyAttributes = ['name', 'ip', 'firstName', 'lastName', 'email', 'avatar', 'country'];\n\n  /**\n   * For the given context and configuration get a list of attributes to filter.\n   * @param {Object} context\n   * @returns {string[]} A list of the attributes to filter.\n   */\n  const getAttributesToFilter = (context, redactAnonymous) =>\n    (allAttributesPrivate || (redactAnonymous && context.anonymous)\n      ? Object.keys(context)\n      : [...privateAttributes, ...((context._meta && context._meta.privateAttributes) || [])]\n    ).filter(attr => !protectedAttributes.some(protectedAttr => AttributeReference.compare(attr, protectedAttr)));\n\n  /**\n   * @param {Object} context\n   * @param {boolean} redactAnonymous\n   * @returns {Object} A copy of the context with private attributes removed,\n   * and the redactedAttributes meta populated.\n   */\n  const filterSingleKind = (context, redactAnonymous) => {\n    if (typeof context !== 'object' || context === null || Array.isArray(context)) {\n      return undefined;\n    }\n\n    const { cloned, excluded } = AttributeReference.cloneExcluding(\n      context,\n      getAttributesToFilter(context, redactAnonymous)\n    );\n    cloned.key = String(cloned.key);\n    if (excluded.length) {\n      if (!cloned._meta) {\n        cloned._meta = {};\n      }\n      cloned._meta.redactedAttributes = excluded;\n    }\n    if (cloned._meta) {\n      delete cloned._meta['privateAttributes'];\n      if (Object.keys(cloned._meta).length === 0) {\n        delete cloned._meta;\n      }\n    }\n    // Make sure anonymous is boolean if present.\n    // Null counts as present, and would be falsy, which is the default.\n    if (cloned.anonymous !== undefined) {\n      cloned.anonymous = !!cloned.anonymous;\n    }\n\n    return cloned;\n  };\n\n  /**\n   * @param {Object} context\n   * @param {boolean} redactAnonymous\n   * @returns {Object} A copy of the context with the private attributes removed,\n   * and the redactedAttributes meta populated for each sub-context.\n   */\n  const filterMultiKind = (context, redactAnonymous) => {\n    const filtered = {\n      kind: context.kind,\n    };\n    const contextKeys = Object.keys(context);\n\n    for (const contextKey of contextKeys) {\n      if (contextKey !== 'kind') {\n        const filteredContext = filterSingleKind(context[contextKey], redactAnonymous);\n        if (filteredContext) {\n          filtered[contextKey] = filteredContext;\n        }\n      }\n    }\n    return filtered;\n  };\n\n  /**\n   * Convert the LDUser object into an LDContext object.\n   * @param {Object} user The LDUser to produce an LDContext for.\n   * @returns {Object} A single kind context based on the provided user.\n   */\n  const legacyToSingleKind = user => {\n    const filtered = {\n      /* Destructure custom items into the top level.\n         Duplicate keys will be overridden by previously\n         top level items.\n      */\n      ...(user.custom || {}),\n\n      // Implicity a user kind.\n      kind: 'user',\n\n      key: user.key,\n    };\n\n    if (user.anonymous !== undefined) {\n      filtered.anonymous = !!user.anonymous;\n    }\n\n    // Copy top level keys and convert them to strings.\n    // Remove keys that may have been destructured from `custom`.\n    for (const key of legacyTopLevelCopyAttributes) {\n      delete filtered[key];\n      if (user[key] !== undefined && user[key] !== null) {\n        filtered[key] = String(user[key]);\n      }\n    }\n\n    if (user.privateAttributeNames !== undefined && user.privateAttributeNames !== null) {\n      filtered._meta = filtered._meta || {};\n      // If any private attributes started with '/' we need to convert them to references, otherwise the '/' will\n      // cause the literal to incorrectly be treated as a reference.\n      filtered._meta.privateAttributes = user.privateAttributeNames.map(literal =>\n        literal.startsWith('/') ? AttributeReference.literalToReference(literal) : literal\n      );\n    }\n\n    return filtered;\n  };\n\n  filter.filter = (context, redactAnonymous = false) => {\n    if (context.kind === undefined || context.kind === null) {\n      return filterSingleKind(legacyToSingleKind(context), redactAnonymous);\n    } else if (context.kind === 'multi') {\n      return filterMultiKind(context, redactAnonymous);\n    } else {\n      return filterSingleKind(context, redactAnonymous);\n    }\n  };\n\n  return filter;\n}\n\nmodule.exports = ContextFilter;\n", "const EventSender = require('./EventSender');\nconst EventSummarizer = require('./EventSummarizer');\nconst ContextFilter = require('./ContextFilter');\nconst errors = require('./errors');\nconst messages = require('./messages');\nconst utils = require('./utils');\nconst { getContextKeys } = require('./context');\n\nfunction EventProcessor(\n  platform,\n  options,\n  environmentId,\n  diagnosticsAccumulator = null,\n  emitter = null,\n  sender = null\n) {\n  const processor = {};\n  const eventSender = sender || EventSender(platform, environmentId, options);\n  const mainEventsUrl = utils.appendUrlPath(options.eventsUrl, '/events/bulk/' + environmentId);\n  const summarizer = EventSummarizer();\n  const contextFilter = ContextFilter(options);\n  const samplingInterval = options.samplingInterval;\n  const eventCapacity = options.eventCapacity;\n  const flushInterval = options.flushInterval;\n  const logger = options.logger;\n  let queue = [];\n  let lastKnownPastTime = 0;\n  let disabled = false;\n  let exceededCapacity = false;\n  let flushTimer;\n\n  function shouldSampleEvent() {\n    return samplingInterval === 0 || Math.floor(Math.random() * samplingInterval) === 0;\n  }\n\n  function shouldDebugEvent(e) {\n    if (e.debugEventsUntilDate) {\n      // The \"last known past time\" comes from the last HTTP response we got from the server.\n      // In case the client's time is set wrong, at least we know that any expiration date\n      // earlier than that point is definitely in the past.  If there's any discrepancy, we\n      // want to err on the side of cutting off event debugging sooner.\n      return e.debugEventsUntilDate > lastKnownPastTime && e.debugEventsUntilDate > new Date().getTime();\n    }\n    return false;\n  }\n\n  // Transform an event from its internal format to the format we use when sending a payload.\n  function makeOutputEvent(e) {\n    const ret = utils.extend({}, e);\n    if (e.kind === 'identify') {\n      // identify events always have an inline context\n      ret.context = contextFilter.filter(e.context);\n    } else if (e.kind === 'feature') {\n      // feature events always have an inline context\n      ret.context = contextFilter.filter(e.context, true);\n    } else {\n      ret.contextKeys = getContextKeysFromEvent(e);\n      delete ret['context'];\n    }\n    if (e.kind === 'feature') {\n      delete ret['trackEvents'];\n      delete ret['debugEventsUntilDate'];\n    }\n    return ret;\n  }\n\n  function getContextKeysFromEvent(event) {\n    return getContextKeys(event.context, logger);\n  }\n\n  function addToOutbox(event) {\n    if (queue.length < eventCapacity) {\n      queue.push(event);\n      exceededCapacity = false;\n    } else {\n      if (!exceededCapacity) {\n        exceededCapacity = true;\n        logger.warn(messages.eventCapacityExceeded());\n      }\n      if (diagnosticsAccumulator) {\n        // For diagnostic events, we track how many times we had to drop an event due to exceeding the capacity.\n        diagnosticsAccumulator.incrementDroppedEvents();\n      }\n    }\n  }\n\n  processor.enqueue = function(event) {\n    if (disabled) {\n      return;\n    }\n    let addFullEvent = false;\n    let addDebugEvent = false;\n\n    // Add event to the summary counters if appropriate\n    summarizer.summarizeEvent(event);\n\n    // Decide whether to add the event to the payload. Feature events may be added twice, once for\n    // the event (if tracked) and once for debugging.\n    if (event.kind === 'feature') {\n      if (shouldSampleEvent()) {\n        addFullEvent = !!event.trackEvents;\n        addDebugEvent = shouldDebugEvent(event);\n      }\n    } else {\n      addFullEvent = shouldSampleEvent();\n    }\n\n    if (addFullEvent) {\n      addToOutbox(makeOutputEvent(event));\n    }\n    if (addDebugEvent) {\n      const debugEvent = utils.extend({}, event, { kind: 'debug' });\n      debugEvent.context = contextFilter.filter(debugEvent.context);\n      delete debugEvent['trackEvents'];\n      delete debugEvent['debugEventsUntilDate'];\n      addToOutbox(debugEvent);\n    }\n  };\n\n  processor.flush = function() {\n    if (disabled) {\n      return Promise.resolve();\n    }\n    const eventsToSend = queue;\n    const summary = summarizer.getSummary();\n    summarizer.clearSummary();\n    if (summary) {\n      summary.kind = 'summary';\n      eventsToSend.push(summary);\n    }\n    if (diagnosticsAccumulator) {\n      // For diagnostic events, we record how many events were in the queue at the last flush (since \"how\n      // many events happened to be in the queue at the moment we decided to send a diagnostic event\" would\n      // not be a very useful statistic).\n      diagnosticsAccumulator.setEventsInLastBatch(eventsToSend.length);\n    }\n    if (eventsToSend.length === 0) {\n      return Promise.resolve();\n    }\n    queue = [];\n    logger.debug(messages.debugPostingEvents(eventsToSend.length));\n    return eventSender.sendEvents(eventsToSend, mainEventsUrl).then(responseInfo => {\n      if (responseInfo) {\n        if (responseInfo.serverTime) {\n          lastKnownPastTime = responseInfo.serverTime;\n        }\n        if (!errors.isHttpErrorRecoverable(responseInfo.status)) {\n          disabled = true;\n        }\n        if (responseInfo.status >= 400) {\n          utils.onNextTick(() => {\n            emitter.maybeReportError(\n              new errors.LDUnexpectedResponseError(\n                messages.httpErrorMessage(responseInfo.status, 'event posting', 'some events were dropped')\n              )\n            );\n          });\n        }\n      }\n    });\n  };\n\n  processor.start = function() {\n    const flushTick = () => {\n      processor.flush();\n      flushTimer = setTimeout(flushTick, flushInterval);\n    };\n    flushTimer = setTimeout(flushTick, flushInterval);\n  };\n\n  processor.stop = function() {\n    clearTimeout(flushTimer);\n  };\n\n  return processor;\n}\n\nmodule.exports = EventProcessor;\n", "function EventEmitter(logger) {\n  const emitter = {};\n  const events = {};\n\n  const listeningTo = event => !!events[event];\n\n  emitter.on = function(event, handler, context) {\n    events[event] = events[event] || [];\n    events[event] = events[event].concat({\n      handler: handler,\n      context: context,\n    });\n  };\n\n  emitter.off = function(event, handler, context) {\n    if (!events[event]) {\n      return;\n    }\n    for (let i = 0; i < events[event].length; i++) {\n      if (events[event][i].handler === handler && events[event][i].context === context) {\n        events[event] = events[event].slice(0, i).concat(events[event].slice(i + 1));\n      }\n    }\n  };\n\n  emitter.emit = function(event) {\n    if (!events[event]) {\n      return;\n    }\n    // Copy the list of handlers before iterating, in case any handler adds or removes another handler.\n    // Any such changes should not affect what we do here-- we want to notify every handler that existed\n    // at the moment that the event was fired.\n    const copiedHandlers = events[event].slice(0);\n    for (let i = 0; i < copiedHandlers.length; i++) {\n      copiedHandlers[i].handler.apply(copiedHandlers[i].context, Array.prototype.slice.call(arguments, 1));\n    }\n  };\n\n  emitter.getEvents = function() {\n    return Object.keys(events);\n  };\n\n  emitter.getEventListenerCount = function(event) {\n    return events[event] ? events[event].length : 0;\n  };\n\n  emitter.maybeReportError = function(error) {\n    if (!error) {\n      return;\n    }\n    if (listeningTo('error')) {\n      this.emit('error', error);\n    } else {\n      (logger || console).error(error.message);\n    }\n  };\n  return emitter;\n}\n\nmodule.exports = EventEmitter;\n", "// This file provides an abstraction of the client's startup state.\n//\n// Startup can either succeed or fail exactly once; calling signalSuccess() or signalFailure()\n// after that point has no effect.\n//\n// On success, we fire both an \"initialized\" event and a \"ready\" event. Both the waitForInitialization()\n// promise and the waitUntilReady() promise are resolved in this case.\n//\n// On failure, we fire both a \"failed\" event (with the error as a parameter) and a \"ready\" event.\n// The waitForInitialization() promise is rejected, but the waitUntilReady() promise is resolved.\n//\n// To complicate things, we must *not* create the waitForInitialization() promise unless it is\n// requested, because otherwise failures would cause an *unhandled* rejection which can be a\n// serious problem in some environments. So we use a somewhat roundabout system for tracking the\n// initialization state and lazily creating this promise.\n\nconst readyEvent = 'ready',\n  successEvent = 'initialized',\n  failureEvent = 'failed';\n\nfunction InitializationStateTracker(eventEmitter) {\n  let succeeded = false,\n    failed = false,\n    failureValue = null,\n    initializationPromise = null;\n\n  const readyPromise = new Promise(resolve => {\n    const onReady = () => {\n      eventEmitter.off(readyEvent, onReady); // we can't use \"once\" because it's not available on some JS platforms\n      resolve();\n    };\n    eventEmitter.on(readyEvent, onReady);\n  }).catch(() => {}); // this Promise should never be rejected, but the catch handler is a safety measure\n\n  return {\n    getInitializationPromise: () => {\n      if (initializationPromise) {\n        return initializationPromise;\n      }\n      if (succeeded) {\n        return Promise.resolve();\n      }\n      if (failed) {\n        return Promise.reject(failureValue);\n      }\n      initializationPromise = new Promise((resolve, reject) => {\n        const onSuccess = () => {\n          eventEmitter.off(successEvent, onSuccess);\n          resolve();\n        };\n        const onFailure = err => {\n          eventEmitter.off(failureEvent, onFailure);\n          reject(err);\n        };\n        eventEmitter.on(successEvent, onSuccess);\n        eventEmitter.on(failureEvent, onFailure);\n      });\n      return initializationPromise;\n    },\n\n    getReadyPromise: () => readyPromise,\n\n    signalSuccess: () => {\n      if (!succeeded && !failed) {\n        succeeded = true;\n        eventEmitter.emit(successEvent);\n        eventEmitter.emit(readyEvent);\n      }\n    },\n\n    signalFailure: err => {\n      if (!succeeded && !failed) {\n        failed = true;\n        failureValue = err;\n        eventEmitter.emit(failureEvent, err);\n        eventEmitter.emit(readyEvent);\n      }\n      eventEmitter.maybeReportError(err); // the \"error\" event can be emitted more than once, unlike the others\n    },\n  };\n}\n\nmodule.exports = InitializationStateTracker;\n", "const utils = require('./utils');\n\nfunction PersistentFlagStore(storage, environment, hash, ident) {\n  const store = {};\n\n  function getFlagsKey() {\n    let key = '';\n    const context = ident.getContext();\n    if (context) {\n      key = hash || utils.btoa(JSON.stringify(context));\n    }\n    return 'ld:' + environment + ':' + key;\n  }\n\n  // Returns a Promise which will be resolved with a parsed JSON value if a stored value was available,\n  // or resolved with null if there was no value or if storage was not available.\n  store.loadFlags = () =>\n    storage.get(getFlagsKey()).then(dataStr => {\n      if (dataStr === null || dataStr === undefined) {\n        return null;\n      }\n      try {\n        let data = JSON.parse(dataStr);\n        if (data) {\n          const schema = data.$schema;\n          if (schema === undefined || schema < 1) {\n            data = utils.transformValuesToVersionedValues(data);\n          } else {\n            delete data['$schema'];\n          }\n        }\n        return data;\n      } catch (ex) {\n        return store.clearFlags().then(() => null);\n      }\n    });\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  store.saveFlags = flags => {\n    const data = utils.extend({}, flags, { $schema: 1 });\n    return storage.set(getFlagsKey(), JSON.stringify(data));\n  };\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  store.clearFlags = () => storage.clear(getFlagsKey());\n\n  return store;\n}\n\nmodule.exports = PersistentFlagStore;\n", "const messages = require('./messages');\n\n// The localStorageProvider is provided by the platform object. It should have the following\n// methods, each of which should return a Promise:\n// - get(key): Gets the string value, if any, for the given key\n// - set(key, value): Stores a string value for the given key\n// - remove(key): Removes the given key\n//\n// Storage is just a light wrapper of the localStorageProvider, adding error handling and\n// ensuring that we don't call it if it's unavailable. The get method will simply resolve\n// with an undefined value if there is an error or if there is no localStorageProvider.\n// None of the promises returned by Storage will ever be rejected.\n//\n// It is always possible that the underlying platform storage mechanism might fail or be\n// disabled. If so, it's likely that it will keep failing, so we will only log one warning\n// instead of repetitive warnings.\nfunction PersistentStorage(localStorageProvider, logger) {\n  const storage = {};\n  let loggedError = false;\n\n  const logError = err => {\n    if (!loggedError) {\n      loggedError = true;\n      logger.warn(messages.localStorageUnavailable(err));\n    }\n  };\n\n  storage.isEnabled = () => !!localStorageProvider;\n\n  // Resolves with a value, or undefined if storage is unavailable. Never rejects.\n  storage.get = key =>\n    new Promise(resolve => {\n      if (!localStorageProvider) {\n        resolve(undefined);\n        return;\n      }\n      localStorageProvider\n        .get(key)\n        .then(resolve)\n        .catch(err => {\n          logError(err);\n          resolve(undefined);\n        });\n    });\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  storage.set = (key, value) =>\n    new Promise(resolve => {\n      if (!localStorageProvider) {\n        resolve(false);\n        return;\n      }\n      localStorageProvider\n        .set(key, value)\n        .then(() => resolve(true))\n        .catch(err => {\n          logError(err);\n          resolve(false);\n        });\n    });\n\n  // Resolves with true if successful, or false if storage is unavailable. Never rejects.\n  storage.clear = key =>\n    new Promise(resolve => {\n      if (!localStorageProvider) {\n        resolve(false);\n        return;\n      }\n      localStorageProvider\n        .clear(key)\n        .then(() => resolve(true))\n        .catch(err => {\n          logError(err);\n          resolve(false);\n        });\n    });\n\n  return storage;\n}\n\nmodule.exports = PersistentStorage;\n", "const messages = require('./messages');\nconst { appendUrlPath, base64URLEncode, objectHasOwnProperty } = require('./utils');\nconst { getLDHeaders, transformHeaders } = require('./headers');\nconst { isHttpErrorRecoverable } = require('./errors');\n\n// The underlying event source implementation is abstracted via the platform object, which should\n// have these three properties:\n// eventSourceFactory(): a function that takes a URL and optional config object and returns an object\n//   with the same methods as the regular HTML5 EventSource object. The properties in the config\n//   object are those supported by the launchdarkly-eventsource package; browser EventSource\n//   implementations don't have any config options.\n// eventSourceIsActive(): a function that takes an EventSource-compatible object and returns true if\n//   it is in an active state (connected or connecting).\n// eventSourceAllowsReport: true if REPORT is supported.\n\n// The read timeout for the stream is a fixed value that is set to be slightly longer than the expected\n// interval between heartbeats from the LaunchDarkly streaming server. If this amount of time elapses\n// with no new data, the connection will be cycled.\nconst streamReadTimeoutMillis = 5 * 60 * 1000; // 5 minutes\nconst maxRetryDelay = 30 * 1000; // Maximum retry delay 30 seconds.\nconst jitterRatio = 0.5; // Delay should be 50%-100% of calculated time.\n\nfunction Stream(platform, config, environment, diagnosticsAccumulator) {\n  const baseUrl = config.streamUrl;\n  const logger = config.logger;\n  const stream = {};\n  const evalUrlPrefix = appendUrlPath(baseUrl, '/eval/' + environment);\n  const useReport = config.useReport;\n  const withReasons = config.evaluationReasons;\n  const baseReconnectDelay = config.streamReconnectDelay;\n  const headers = getLDHeaders(platform, config);\n  let firstConnectionErrorLogged = false;\n  let es = null;\n  let reconnectTimeoutReference = null;\n  let connectionAttemptStartTime;\n  let context = null;\n  let hash = null;\n  let handlers = null;\n  let retryCount = 0;\n\n  function backoff() {\n    const delay = baseReconnectDelay * Math.pow(2, retryCount);\n    return delay > maxRetryDelay ? maxRetryDelay : delay;\n  }\n\n  function jitter(computedDelayMillis) {\n    return computedDelayMillis - Math.trunc(Math.random() * jitterRatio * computedDelayMillis);\n  }\n\n  function getNextRetryDelay() {\n    const delay = jitter(backoff());\n    retryCount += 1;\n    return delay;\n  }\n\n  stream.connect = function(newContext, newHash, newHandlers) {\n    context = newContext;\n    hash = newHash;\n    handlers = {};\n    for (const key in newHandlers || {}) {\n      handlers[key] = function(e) {\n        // Reset the state for logging the first connection error so that the first\n        // connection error following a successful connection will once again be logged.\n        // We will decorate *all* handlers to do this to keep this abstraction agnostic\n        // for different stream implementations.\n        firstConnectionErrorLogged = false;\n        logConnectionResult(true);\n        newHandlers[key] && newHandlers[key](e);\n      };\n    }\n    tryConnect();\n  };\n\n  stream.disconnect = function() {\n    clearTimeout(reconnectTimeoutReference);\n    reconnectTimeoutReference = null;\n    closeConnection();\n  };\n\n  stream.isConnected = function() {\n    return !!(es && platform.eventSourceIsActive && platform.eventSourceIsActive(es));\n  };\n\n  function handleError(err) {\n    // The event source may not produce a status. But the LaunchDarkly\n    // polyfill can. If we can get the status, then we should stop retrying\n    // on certain error codes.\n    if (err.status && typeof err.status === 'number' && !isHttpErrorRecoverable(err.status)) {\n      // If we encounter an unrecoverable condition, then we do not want to\n      // retry anymore.\n      closeConnection();\n      logger.error(messages.unrecoverableStreamError(err));\n      // Ensure any pending retry attempts are not done.\n      if (reconnectTimeoutReference) {\n        clearTimeout(reconnectTimeoutReference);\n        reconnectTimeoutReference = null;\n      }\n      return;\n    }\n\n    const delay = getNextRetryDelay();\n\n    if (!firstConnectionErrorLogged) {\n      logger.warn(messages.streamError(err, delay));\n      firstConnectionErrorLogged = true;\n    }\n    logConnectionResult(false);\n    closeConnection();\n    tryConnect(delay);\n  }\n\n  function tryConnect(delay) {\n    if (!reconnectTimeoutReference) {\n      if (delay) {\n        reconnectTimeoutReference = setTimeout(openConnection, delay);\n      } else {\n        openConnection();\n      }\n    }\n  }\n\n  function openConnection() {\n    reconnectTimeoutReference = null;\n    let url;\n    let query = '';\n    const options = { headers, readTimeoutMillis: streamReadTimeoutMillis };\n    if (platform.eventSourceFactory) {\n      if (hash !== null && hash !== undefined) {\n        query = 'h=' + hash;\n      }\n      if (useReport) {\n        if (platform.eventSourceAllowsReport) {\n          url = evalUrlPrefix;\n          options.method = 'REPORT';\n          options.headers['Content-Type'] = 'application/json';\n          options.body = JSON.stringify(context);\n        } else {\n          // if we can't do REPORT, fall back to the old ping-based stream\n          url = appendUrlPath(baseUrl, '/ping/' + environment);\n          query = '';\n        }\n      } else {\n        url = evalUrlPrefix + '/' + base64URLEncode(JSON.stringify(context));\n      }\n      options.headers = transformHeaders(options.headers, config);\n      if (withReasons) {\n        query = query + (query ? '&' : '') + 'withReasons=true';\n      }\n      url = url + (query ? '?' : '') + query;\n\n      closeConnection();\n      logger.info(messages.streamConnecting(url));\n      logConnectionStarted();\n\n      es = platform.eventSourceFactory(url, options);\n      for (const key in handlers) {\n        if (objectHasOwnProperty(handlers, key)) {\n          es.addEventListener(key, handlers[key]);\n        }\n      }\n\n      es.onerror = handleError;\n\n      es.onopen = () => {\n        // If the connection is a success, then reset the retryCount.\n        retryCount = 0;\n      };\n    }\n  }\n\n  function closeConnection() {\n    if (es) {\n      logger.info(messages.streamClosing());\n      es.close();\n      es = null;\n    }\n  }\n\n  function logConnectionStarted() {\n    connectionAttemptStartTime = new Date().getTime();\n  }\n\n  function logConnectionResult(success) {\n    if (connectionAttemptStartTime && diagnosticsAccumulator) {\n      diagnosticsAccumulator.recordStreamInit(\n        connectionAttemptStartTime,\n        !success,\n        new Date().getTime() - connectionAttemptStartTime\n      );\n    }\n    connectionAttemptStartTime = null;\n  }\n\n  return stream;\n}\n\nmodule.exports = Stream;\n", "// This function allows a series of Promises to be coalesced such that only the most recently\n// added one actually matters. For instance, if several HTTP requests are made to the same\n// endpoint and we want to ensure that whoever made each one always gets the latest data, each\n// can be passed to addPromise (on the same coalescer) and each caller can wait on the\n// coalescer.resultPromise; all three will then receive the result (or error) from the *last*\n// request, and the results of the first two will be discarded.\n//\n// The cancelFn callback, if present, will be called whenever an existing promise is being\n// discarded. This can be used for instance to abort an HTTP request that's now obsolete.\n//\n// The finallyFn callback, if present, is called on completion of the whole thing. This is\n// different from calling coalescer.resultPromise.finally() because it is executed before any\n// other handlers. Its purpose is to tell the caller that this coalescer should no longer be used.\n\nfunction promiseCoalescer(finallyFn) {\n  let currentPromise;\n  let currentCancelFn;\n  let finalResolve;\n  let finalReject;\n\n  const coalescer = {};\n\n  coalescer.addPromise = (p, cancelFn) => {\n    currentPromise = p;\n    currentCancelFn && currentCancelFn();\n    currentCancelFn = cancelFn;\n\n    p.then(\n      result => {\n        if (currentPromise === p) {\n          finalResolve(result);\n          finallyFn && finallyFn();\n        }\n      },\n      error => {\n        if (currentPromise === p) {\n          finalReject(error);\n          finallyFn && finallyFn();\n        }\n      }\n    );\n  };\n\n  coalescer.resultPromise = new Promise((resolve, reject) => {\n    finalResolve = resolve;\n    finalReject = reject;\n  });\n\n  return coalescer;\n}\n\nmodule.exports = promiseCoalescer;\n", "const utils = require('./utils');\nconst errors = require('./errors');\nconst messages = require('./messages');\nconst promiseCoalescer = require('./promiseCoalescer');\nconst { transformHeaders, getLDHeaders } = require('./headers');\n\nconst jsonContentType = 'application/json';\n\nfunction getResponseError(result) {\n  if (result.status === 404) {\n    return new errors.LDInvalidEnvironmentIdError(messages.environmentNotFound());\n  } else {\n    return new errors.LDFlagFetchError(messages.errorFetchingFlags(result.statusText || String(result.status)));\n  }\n}\n\nfunction Requestor(platform, options, environment) {\n  const baseUrl = options.baseUrl;\n  const useReport = options.useReport;\n  const withReasons = options.evaluationReasons;\n  const logger = options.logger;\n\n  const requestor = {};\n\n  const activeRequests = {}; // map of URLs to promiseCoalescers\n\n  function fetchJSON(endpoint, body) {\n    if (!platform.httpRequest) {\n      return new Promise((resolve, reject) => {\n        reject(new errors.LDFlagFetchError(messages.httpUnavailable()));\n      });\n    }\n\n    const method = body ? 'REPORT' : 'GET';\n    const headers = getLDHeaders(platform, options);\n    if (body) {\n      headers['Content-Type'] = jsonContentType;\n    }\n\n    let coalescer = activeRequests[endpoint];\n    if (!coalescer) {\n      coalescer = promiseCoalescer(() => {\n        // this will be called once there are no more active requests for the same endpoint\n        delete activeRequests[endpoint];\n      });\n      activeRequests[endpoint] = coalescer;\n    }\n\n    const req = platform.httpRequest(method, endpoint, transformHeaders(headers, options), body);\n    const p = req.promise.then(\n      result => {\n        if (result.status === 200) {\n          // We're using substring here because using startsWith would require a polyfill in IE.\n          if (\n            result.header('content-type') &&\n            result.header('content-type').substring(0, jsonContentType.length) === jsonContentType\n          ) {\n            return JSON.parse(result.body);\n          } else {\n            const message = messages.invalidContentType(result.header('content-type') || '');\n            return Promise.reject(new errors.LDFlagFetchError(message));\n          }\n        } else {\n          return Promise.reject(getResponseError(result));\n        }\n      },\n      e => Promise.reject(new errors.LDFlagFetchError(messages.networkError(e)))\n    );\n    coalescer.addPromise(p, () => {\n      // this will be called if another request for the same endpoint supersedes this one\n      req.cancel && req.cancel();\n    });\n    return coalescer.resultPromise;\n  }\n\n  // Performs a GET request to an arbitrary path under baseUrl. Returns a Promise which will resolve\n  // with the parsed JSON response, or will be rejected if the request failed.\n  requestor.fetchJSON = function(path) {\n    return fetchJSON(utils.appendUrlPath(baseUrl, path), null);\n  };\n\n  // Requests the current state of all flags for the given context from LaunchDarkly. Returns a Promise\n  // which will resolve with the parsed JSON response, or will be rejected if the request failed.\n  requestor.fetchFlagSettings = function(context, hash) {\n    let data;\n    let endpoint;\n    let query = '';\n    let body;\n\n    if (useReport) {\n      endpoint = [baseUrl, '/sdk/evalx/', environment, '/context'].join('');\n      body = JSON.stringify(context);\n    } else {\n      data = utils.base64URLEncode(JSON.stringify(context));\n      endpoint = [baseUrl, '/sdk/evalx/', environment, '/contexts/', data].join('');\n    }\n    if (hash) {\n      query = 'h=' + hash;\n    }\n    if (withReasons) {\n      query = query + (query ? '&' : '') + 'withReasons=true';\n    }\n    endpoint = endpoint + (query ? '?' : '') + query;\n    logger.debug(messages.debugPolling(endpoint));\n\n    return fetchJSON(endpoint, body);\n  };\n\n  return requestor;\n}\n\nmodule.exports = Requestor;\n", "const utils = require('./utils');\n\nfunction Identity(initialContext, onChange) {\n  const ident = {};\n  let context;\n\n  ident.setContext = function(c) {\n    context = utils.sanitizeContext(c);\n    if (context && onChange) {\n      onChange(utils.clone(context));\n    }\n  };\n\n  ident.getContext = function() {\n    return context ? utils.clone(context) : null;\n  };\n\n  if (initialContext) {\n    ident.setContext(initialContext);\n  }\n\n  return ident;\n}\n\nmodule.exports = Identity;\n", "const { v1: uuidv1 } = require('uuid');\nconst { getContextKinds } = require('./context');\n\nconst errors = require('./errors');\nconst messages = require('./messages');\nconst utils = require('./utils');\n\nconst ldUserIdKey = 'ld:$anonUserId';\n\n/**\n * Create an object which can process a context and populate any required keys\n * for anonymous objects.\n *\n * @param {Object} persistentStorage The persistent storage from which to store\n * and access persisted anonymous context keys.\n * @returns An AnonymousContextProcessor.\n */\nfunction AnonymousContextProcessor(persistentStorage) {\n  function getContextKeyIdString(kind) {\n    if (kind === undefined || kind === null || kind === 'user') {\n      return ldUserIdKey;\n    }\n    return `ld:$contextKey:${kind}`;\n  }\n\n  function getCachedContextKey(kind) {\n    return persistentStorage.get(getContextKeyIdString(kind));\n  }\n\n  function setCachedContextKey(id, kind) {\n    return persistentStorage.set(getContextKeyIdString(kind), id);\n  }\n\n  /**\n   * Process a single kind context, or a single context within a multi-kind context.\n   * @param {string} kind The kind of the context. Independent because the kind is not prevent\n   * within a context in a multi-kind context.\n   * @param {Object} context\n   * @returns {Promise} a promise that resolves to a processed contexts, or rejects\n   * a context which cannot be processed.\n   */\n  function processSingleKindContext(kind, context) {\n    // We are working on a copy of an original context, so we want to re-assign\n    // versus duplicating it again.\n\n    /* eslint-disable no-param-reassign */\n    if (context.key !== null && context.key !== undefined) {\n      context.key = context.key.toString();\n      return Promise.resolve(context);\n    }\n\n    if (context.anonymous) {\n      // If the key doesn't exist, then the persistent storage will resolve\n      // with undefined.\n      return getCachedContextKey(kind).then(cachedId => {\n        if (cachedId) {\n          context.key = cachedId;\n          return context;\n        } else {\n          const id = uuidv1();\n          context.key = id;\n          return setCachedContextKey(id, kind).then(() => context);\n        }\n      });\n    } else {\n      return Promise.reject(new errors.LDInvalidUserError(messages.invalidContext()));\n    }\n    /* eslint-enable no-param-reassign */\n  }\n\n  /**\n   * Process the context, returning a Promise that resolves to the processed context, or rejects if there is an error.\n   * @param {Object} context\n   * @returns {Promise} A promise which resolves to a processed context, or a rejection if the context cannot be\n   * processed. The context should still be checked for overall validity after being processed.\n   */\n  this.processContext = context => {\n    if (!context) {\n      return Promise.reject(new errors.LDInvalidUserError(messages.contextNotSpecified()));\n    }\n\n    const processedContext = utils.clone(context);\n\n    if (context.kind === 'multi') {\n      const kinds = getContextKinds(processedContext);\n\n      return Promise.all(kinds.map(kind => processSingleKindContext(kind, processedContext[kind]))).then(\n        () => processedContext\n      );\n    }\n    return processSingleKindContext(context.kind, processedContext);\n  };\n}\n\nmodule.exports = AnonymousContextProcessor;\n", "const { v1: uuidv1 } = require('uuid');\n// Note that in the diagnostic events spec, these IDs are to be generated with UUID v4. However,\n// in JS we were already using v1 for unique context keys, so to avoid bringing in two packages we\n// will use v1 here as well.\n\nconst { baseOptionDefs } = require('./configuration');\nconst messages = require('./messages');\nconst { appendUrlPath } = require('./utils');\n\nfunction DiagnosticId(sdkKey) {\n  const ret = {\n    diagnosticId: uuidv1(),\n  };\n  if (sdkKey) {\n    ret.sdkKeySuffix = sdkKey.length > 6 ? sdkKey.substring(sdkKey.length - 6) : sdkKey;\n  }\n  return ret;\n}\n\n// A stateful object holding statistics that will go into diagnostic events.\n\nfunction DiagnosticsAccumulator(startTime) {\n  let dataSinceDate, droppedEvents, eventsInLastBatch, streamInits;\n\n  function reset(time) {\n    dataSinceDate = time;\n    droppedEvents = 0;\n    eventsInLastBatch = 0;\n    streamInits = [];\n  }\n\n  reset(startTime);\n\n  return {\n    getProps: () => ({\n      dataSinceDate,\n      droppedEvents,\n      eventsInLastBatch,\n      streamInits,\n      // omit deduplicatedUsers for the JS SDKs because they don't deduplicate users\n    }),\n    setProps: props => {\n      dataSinceDate = props.dataSinceDate;\n      droppedEvents = props.droppedEvents || 0;\n      eventsInLastBatch = props.eventsInLastBatch || 0;\n      streamInits = props.streamInits || [];\n    },\n    incrementDroppedEvents: () => {\n      droppedEvents++;\n    },\n    setEventsInLastBatch: n => {\n      eventsInLastBatch = n;\n    },\n    recordStreamInit: (timestamp, failed, durationMillis) => {\n      const info = { timestamp, failed, durationMillis };\n      streamInits.push(info);\n    },\n    reset,\n  };\n}\n\n// An object that maintains information that will go into diagnostic events, and knows how to format\n// those events. It is instantiated by the SDK client, and shared with the event processor.\n//\n// The JS-based SDKs have two modes for diagnostic events. By default, the behavior is basically the\n// same as the server-side SDKs: a \"diagnostic-init\" event is sent on startup, and then \"diagnostic\"\n// events with operating statistics are sent periodically. However, in a browser environment this is\n// undesirable because the page may be reloaded frequently. In that case, setting the property\n// \"platform.diagnosticUseCombinedEvent\" to true enables an alternate mode in which a combination of\n// both kinds of event is sent at intervals, relative to the last time this was done (if any) which\n// is cached in local storage.\n\nfunction DiagnosticsManager(\n  platform,\n  persistentStorage,\n  accumulator,\n  eventSender,\n  environmentId,\n  config,\n  diagnosticId\n) {\n  const combinedMode = !!platform.diagnosticUseCombinedEvent;\n  const localStorageKey = 'ld:' + environmentId + ':$diagnostics';\n  const diagnosticEventsUrl = appendUrlPath(config.eventsUrl, '/events/diagnostic/' + environmentId);\n  const periodicInterval = config.diagnosticRecordingInterval;\n  const acc = accumulator;\n  const initialEventSamplingInterval = 4; // used only in combined mode - see start()\n  let streamingEnabled = !!config.streaming;\n  let eventSentTime;\n  let periodicTimer;\n  const manager = {};\n\n  function makeInitProperties() {\n    return {\n      sdk: makeSdkData(),\n      configuration: makeConfigData(),\n      platform: platform.diagnosticPlatformData,\n    };\n  }\n\n  // Send a diagnostic event and do not wait for completion.\n  function sendDiagnosticEvent(event) {\n    config.logger && config.logger.debug(messages.debugPostingDiagnosticEvent(event));\n    eventSender\n      .sendEvents(event, diagnosticEventsUrl, true)\n      .then(() => undefined)\n      .catch(() => undefined);\n  }\n\n  function loadProperties(callback) {\n    if (!persistentStorage.isEnabled()) {\n      return callback(false); // false indicates that local storage is not available\n    }\n    persistentStorage\n      .get(localStorageKey)\n      .then(data => {\n        if (data) {\n          try {\n            const props = JSON.parse(data);\n            acc.setProps(props);\n            eventSentTime = props.dataSinceDate;\n          } catch (e) {\n            // disregard malformed cached data\n          }\n        }\n        callback(true);\n      })\n      .catch(() => {\n        callback(false);\n      });\n  }\n\n  function saveProperties() {\n    if (persistentStorage.isEnabled()) {\n      const props = { ...acc.getProps() };\n      persistentStorage.set(localStorageKey, JSON.stringify(props));\n    }\n  }\n\n  // Creates the initial event that is sent by the event processor when the SDK starts up. This will not\n  // be repeated during the lifetime of the SDK client. In combined mode, we don't send this.\n  function createInitEvent() {\n    return {\n      kind: 'diagnostic-init',\n      id: diagnosticId,\n      creationDate: acc.getProps().dataSinceDate,\n      ...makeInitProperties(),\n    };\n  }\n\n  // Creates a periodic event containing time-dependent stats, and resets the state of the manager with\n  // regard to those stats. In combined mode (browser SDK) this also contains the configuration data.\n  function createPeriodicEventAndReset() {\n    const currentTime = new Date().getTime();\n    let ret = {\n      kind: combinedMode ? 'diagnostic-combined' : 'diagnostic',\n      id: diagnosticId,\n      creationDate: currentTime,\n      ...acc.getProps(),\n    };\n    if (combinedMode) {\n      ret = { ...ret, ...makeInitProperties() };\n    }\n    acc.reset(currentTime);\n    return ret;\n  }\n\n  function sendPeriodicEvent() {\n    sendDiagnosticEvent(createPeriodicEventAndReset());\n    periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n    eventSentTime = new Date().getTime();\n    if (combinedMode) {\n      saveProperties();\n    }\n  }\n\n  function makeSdkData() {\n    const sdkData = { ...platform.diagnosticSdkData };\n    if (config.wrapperName) {\n      sdkData.wrapperName = config.wrapperName;\n    }\n    if (config.wrapperVersion) {\n      sdkData.wrapperVersion = config.wrapperVersion;\n    }\n    return sdkData;\n  }\n\n  function makeConfigData() {\n    const configData = {\n      customBaseURI: config.baseUrl !== baseOptionDefs.baseUrl.default,\n      customStreamURI: config.streamUrl !== baseOptionDefs.streamUrl.default,\n      customEventsURI: config.eventsUrl !== baseOptionDefs.eventsUrl.default,\n      eventsCapacity: config.eventCapacity,\n      eventsFlushIntervalMillis: config.flushInterval,\n      reconnectTimeMillis: config.streamReconnectDelay,\n      streamingDisabled: !streamingEnabled,\n      allAttributesPrivate: !!config.allAttributesPrivate,\n      diagnosticRecordingIntervalMillis: config.diagnosticRecordingInterval,\n      // The following extra properties are only provided by client-side JS SDKs:\n      usingSecureMode: !!config.hash,\n      bootstrapMode: !!config.bootstrap,\n      fetchGoalsDisabled: !config.fetchGoals,\n      sendEventsOnlyForVariation: !!config.sendEventsOnlyForVariation,\n    };\n    // Client-side JS SDKs do not have the following properties which other SDKs have:\n    // connectTimeoutMillis\n    // pollingIntervalMillis\n    // samplingInterval\n    // socketTimeoutMillis\n    // startWaitMillis\n    // userKeysCapacity\n    // userKeysFlushIntervalMillis\n    // usingProxy\n    // usingProxyAuthenticator\n    // usingRelayDaemon\n\n    return configData;\n  }\n\n  // Called when the SDK is starting up. Either send an init event immediately, or, in the alternate\n  // mode, check for cached local storage properties and send an event only if we haven't done so\n  // recently.\n  manager.start = () => {\n    if (combinedMode) {\n      loadProperties(localStorageAvailable => {\n        if (localStorageAvailable) {\n          const nextEventTime = (eventSentTime || 0) + periodicInterval;\n          const timeNow = new Date().getTime();\n          if (timeNow >= nextEventTime) {\n            sendPeriodicEvent();\n          } else {\n            periodicTimer = setTimeout(sendPeriodicEvent, nextEventTime - timeNow);\n          }\n        } else {\n          // We don't have the ability to cache anything in local storage, so we don't know if we\n          // recently sent an event before this page load, but we would still prefer not to send one\n          // on *every* page load. So, as a rough heuristic, we'll decide semi-randomly.\n          if (Math.floor(Math.random() * initialEventSamplingInterval) === 0) {\n            sendPeriodicEvent();\n          } else {\n            periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n          }\n        }\n      });\n    } else {\n      sendDiagnosticEvent(createInitEvent());\n      periodicTimer = setTimeout(sendPeriodicEvent, periodicInterval);\n    }\n  };\n\n  manager.stop = () => {\n    periodicTimer && clearTimeout(periodicTimer);\n  };\n\n  // Called when streaming mode is turned on or off dynamically.\n  manager.setStreaming = enabled => {\n    streamingEnabled = enabled;\n  };\n\n  return manager;\n}\n\nmodule.exports = {\n  DiagnosticId,\n  DiagnosticsAccumulator,\n  DiagnosticsManager,\n};\n", "const messages = require('./messages');\n\n/**\n * Wrap an inspector ensuring that calling its methods are safe.\n * @param {object} inspector Inspector to wrap.\n */\nfunction SafeInspector(inspector, logger) {\n  let errorLogged = false;\n  const wrapper = {\n    type: inspector.type,\n    name: inspector.name,\n    synchronous: inspector.synchronous,\n  };\n\n  wrapper.method = (...args) => {\n    try {\n      inspector.method(...args);\n    } catch {\n      // If something goes wrong in an inspector we want to log that something\n      // went wrong. We don't want to flood the logs, so we only log something\n      // the first time that something goes wrong.\n      // We do not include the exception in the log, because we do not know what\n      // kind of data it may contain.\n      if (!errorLogged) {\n        errorLogged = true;\n        logger.warn(messages.inspectorMethodError(wrapper.type, wrapper.name));\n      }\n      // Prevent errors.\n    }\n  };\n\n  return wrapper;\n}\n\nmodule.exports = SafeInspector;\n", "const messages = require('./messages');\nconst SafeInspector = require('./SafeInspector');\nconst { onNextTick } = require('./utils');\n\n/**\n * The types of supported inspectors.\n */\nconst InspectorTypes = {\n  flagUsed: 'flag-used',\n  flagDetailsChanged: 'flag-details-changed',\n  flagDetailChanged: 'flag-detail-changed',\n  clientIdentityChanged: 'client-identity-changed',\n};\n\nObject.freeze(InspectorTypes);\n\n/**\n * Manages dispatching of inspection data to registered inspectors.\n */\nfunction InspectorManager(inspectors, logger) {\n  const manager = {};\n\n  /**\n   * Collection of inspectors keyed by type.\n   *\n   * Inspectors are async by default.\n   *\n   * @type {{[type: string]: object[]}}\n   */\n  const inspectorsByType = {\n    [InspectorTypes.flagUsed]: [],\n    [InspectorTypes.flagDetailsChanged]: [],\n    [InspectorTypes.flagDetailChanged]: [],\n    [InspectorTypes.clientIdentityChanged]: [],\n  };\n  /**\n   * Collection synchronous of inspectors keyed by type.\n   *\n   * @type {{[type: string]: object[]}}\n   */\n  const synchronousInspectorsByType = {\n    [InspectorTypes.flagUsed]: [],\n    [InspectorTypes.flagDetailsChanged]: [],\n    [InspectorTypes.flagDetailChanged]: [],\n    [InspectorTypes.clientIdentityChanged]: [],\n  };\n\n  const safeInspectors = inspectors && inspectors.map(inspector => SafeInspector(inspector, logger));\n\n  safeInspectors &&\n    safeInspectors.forEach(safeInspector => {\n      // Only add inspectors of supported types.\n      if (Object.prototype.hasOwnProperty.call(inspectorsByType, safeInspector.type) && !safeInspector.synchronous) {\n        inspectorsByType[safeInspector.type].push(safeInspector);\n      } else if (\n        Object.prototype.hasOwnProperty.call(synchronousInspectorsByType, safeInspector.type) &&\n        safeInspector.synchronous\n      ) {\n        synchronousInspectorsByType[safeInspector.type].push(safeInspector);\n      } else {\n        logger.warn(messages.invalidInspector(safeInspector.type, safeInspector.name));\n      }\n    });\n\n  /**\n   * Check if there is an inspector of a specific type registered.\n   *\n   * @param {string} type The type of the inspector to check.\n   * @returns True if there are any inspectors of that type registered.\n   */\n  manager.hasListeners = type =>\n    (inspectorsByType[type] && inspectorsByType[type].length) ||\n    (synchronousInspectorsByType[type] && synchronousInspectorsByType[type].length);\n\n  /**\n   * Notify registered inspectors of a flag being used.\n   *\n   * The notification itself will be dispatched asynchronously.\n   *\n   * @param {string} flagKey The key for the flag.\n   * @param {Object} detail The LDEvaluationDetail for the flag.\n   * @param {Object} context The LDContext for the flag.\n   */\n  manager.onFlagUsed = (flagKey, detail, context) => {\n    const type = InspectorTypes.flagUsed;\n    if (synchronousInspectorsByType[type].length) {\n      synchronousInspectorsByType[type].forEach(inspector => inspector.method(flagKey, detail, context));\n    }\n    if (inspectorsByType[type].length) {\n      onNextTick(() => {\n        inspectorsByType[type].forEach(inspector => inspector.method(flagKey, detail, context));\n      });\n    }\n  };\n\n  /**\n   * Notify registered inspectors that the flags have been replaced.\n   *\n   * The notification itself will be dispatched asynchronously.\n   *\n   * @param {Record<string, Object>} flags The current flags as a Record<string, LDEvaluationDetail>.\n   */\n  manager.onFlags = flags => {\n    const type = InspectorTypes.flagDetailsChanged;\n    if (synchronousInspectorsByType[type].length) {\n      synchronousInspectorsByType[type].forEach(inspector => inspector.method(flags));\n    }\n    if (inspectorsByType[type].length) {\n      onNextTick(() => {\n        inspectorsByType[type].forEach(inspector => inspector.method(flags));\n      });\n    }\n  };\n\n  /**\n   * Notify registered inspectors that a flag value has changed.\n   *\n   * The notification itself will be dispatched asynchronously.\n   *\n   * @param {string} flagKey The key for the flag that changed.\n   * @param {Object} flag An `LDEvaluationDetail` for the flag.\n   */\n  manager.onFlagChanged = (flagKey, flag) => {\n    const type = InspectorTypes.flagDetailChanged;\n    if (synchronousInspectorsByType[type].length) {\n      synchronousInspectorsByType[type].forEach(inspector => inspector.method(flagKey, flag));\n    }\n    if (inspectorsByType[type].length) {\n      onNextTick(() => {\n        inspectorsByType[type].forEach(inspector => inspector.method(flagKey, flag));\n      });\n    }\n  };\n\n  /**\n   * Notify the registered inspectors that the context identity has changed.\n   *\n   * The notification itself will be dispatched asynchronously.\n   *\n   * @param {Object} context The `LDContext` which is now identified.\n   */\n  manager.onIdentityChanged = context => {\n    const type = InspectorTypes.clientIdentityChanged;\n    if (synchronousInspectorsByType[type].length) {\n      synchronousInspectorsByType[type].forEach(inspector => inspector.method(context));\n    }\n    if (inspectorsByType[type].length) {\n      onNextTick(() => {\n        inspectorsByType[type].forEach(inspector => inspector.method(context));\n      });\n    }\n  };\n\n  return manager;\n}\n\nmodule.exports = { InspectorTypes, InspectorManager };\n", "const { LDTimeoutError } = require('./errors');\n\n/**\n * Returns a promise which errors after t seconds.\n *\n * @param t Timeout in seconds.\n * @param taskName Name of task being timed for logging and error reporting.\n */\nfunction timedPromise(t, taskName) {\n  return new Promise((_res, reject) => {\n    setTimeout(() => {\n      const e = `${taskName} timed out after ${t} seconds.`;\n      reject(new LDTimeoutError(e));\n    }, t * 1000);\n  });\n}\nmodule.exports = timedPromise;\n", "const EventProcessor = require('./EventProcessor');\nconst EventEmitter = require('./EventEmitter');\nconst EventSender = require('./EventSender');\nconst InitializationStateTracker = require('./InitializationState');\nconst PersistentFlagStore = require('./PersistentFlagStore');\nconst PersistentStorage = require('./PersistentStorage');\nconst Stream = require('./Stream');\nconst Requestor = require('./Requestor');\nconst Identity = require('./Identity');\nconst AnonymousContextProcessor = require('./AnonymousContextProcessor');\nconst configuration = require('./configuration');\nconst diagnostics = require('./diagnosticEvents');\nconst { commonBasicLogger } = require('./loggers');\nconst utils = require('./utils');\nconst errors = require('./errors');\nconst messages = require('./messages');\nconst { checkContext, getContextKeys } = require('./context');\nconst { InspectorTypes, InspectorManager } = require('./InspectorManager');\nconst timedPromise = require('./timedPromise');\n\nconst changeEvent = 'change';\nconst internalChangeEvent = 'internal-change';\nconst highTimeoutThreshold = 5;\n\n// This is called by the per-platform initialize functions to create the base client object that we\n// may also extend with additional behavior. It returns an object with these properties:\n//   client: the actual client object\n//   options: the configuration (after any appropriate defaults have been applied)\n// If we need to give the platform-specific clients access to any internals here, we should add those\n// as properties of the return object, not public properties of the client.\n//\n// For definitions of the API in the platform object, see stubPlatform.js in the test code.\n\nfunction initialize(env, context, specifiedOptions, platform, extraOptionDefs) {\n  const logger = createLogger();\n  const emitter = EventEmitter(logger);\n  const initializationStateTracker = InitializationStateTracker(emitter);\n  const options = configuration.validate(specifiedOptions, emitter, extraOptionDefs, logger);\n  const inspectorManager = InspectorManager(options.inspectors, logger);\n  const sendEvents = options.sendEvents;\n  let environment = env;\n  let hash = options.hash;\n\n  const persistentStorage = PersistentStorage(platform.localStorage, logger);\n\n  const eventSender = EventSender(platform, environment, options);\n\n  const diagnosticsEnabled = options.sendEvents && !options.diagnosticOptOut;\n  const diagnosticId = diagnosticsEnabled ? diagnostics.DiagnosticId(environment) : null;\n  const diagnosticsAccumulator = diagnosticsEnabled ? diagnostics.DiagnosticsAccumulator(new Date().getTime()) : null;\n  const diagnosticsManager = diagnosticsEnabled\n    ? diagnostics.DiagnosticsManager(\n        platform,\n        persistentStorage,\n        diagnosticsAccumulator,\n        eventSender,\n        environment,\n        options,\n        diagnosticId\n      )\n    : null;\n\n  const stream = Stream(platform, options, environment, diagnosticsAccumulator);\n\n  const events =\n    options.eventProcessor ||\n    EventProcessor(platform, options, environment, diagnosticsAccumulator, emitter, eventSender);\n\n  const requestor = Requestor(platform, options, environment);\n\n  let flags = {};\n  let useLocalStorage;\n  let streamActive;\n  let streamForcedState = options.streaming;\n  let subscribedToChangeEvents;\n  let inited = false;\n  let closed = false;\n  let firstEvent = true;\n\n  // The \"stateProvider\" object is used in the Electron SDK, to allow one client instance to take partial\n  // control of another. If present, it has the following contract:\n  // - getInitialState() returns the initial client state if it is already available. The state is an\n  //   object whose properties are \"environment\", \"context\", and \"flags\".\n  // - on(\"init\", listener) triggers an event when the initial client state becomes available, passing\n  //   the state object to the listener.\n  // - on(\"update\", listener) triggers an event when flag values change and/or the current context changes.\n  //   The parameter is an object that *may* contain \"context\" and/or \"flags\".\n  // - enqueueEvent(event) accepts an analytics event object and returns true if the stateProvider will\n  //   be responsible for delivering it, or false if we still should deliver it ourselves.\n  const stateProvider = options.stateProvider;\n\n  const ident = Identity(null, onIdentifyChange);\n  const anonymousContextProcessor = new AnonymousContextProcessor(persistentStorage);\n  const persistentFlagStore = persistentStorage.isEnabled()\n    ? PersistentFlagStore(persistentStorage, environment, hash, ident, logger)\n    : null;\n\n  function createLogger() {\n    if (specifiedOptions && specifiedOptions.logger) {\n      return specifiedOptions.logger;\n    }\n    return (extraOptionDefs && extraOptionDefs.logger && extraOptionDefs.logger.default) || commonBasicLogger('warn');\n  }\n\n  function readFlagsFromBootstrap(data) {\n    // If the bootstrap data came from an older server-side SDK, we'll have just a map of keys to values.\n    // Newer SDKs that have an allFlagsState method will provide an extra \"$flagsState\" key that contains\n    // the rest of the metadata we want. We do it this way for backward compatibility with older JS SDKs.\n    const keys = Object.keys(data);\n    const metadataKey = '$flagsState';\n    const validKey = '$valid';\n    const metadata = data[metadataKey];\n    if (!metadata && keys.length) {\n      logger.warn(messages.bootstrapOldFormat());\n    }\n    if (data[validKey] === false) {\n      logger.warn(messages.bootstrapInvalid());\n    }\n    const ret = {};\n    keys.forEach(key => {\n      if (key !== metadataKey && key !== validKey) {\n        let flag = { value: data[key] };\n        if (metadata && metadata[key]) {\n          flag = utils.extend(flag, metadata[key]);\n        } else {\n          flag.version = 0;\n        }\n        ret[key] = flag;\n      }\n    });\n    return ret;\n  }\n\n  function shouldEnqueueEvent() {\n    return sendEvents && !closed && !platform.isDoNotTrack();\n  }\n\n  function enqueueEvent(event) {\n    if (!environment) {\n      // We're in paired mode and haven't been initialized with an environment or context yet\n      return;\n    }\n    if (stateProvider && stateProvider.enqueueEvent && stateProvider.enqueueEvent(event)) {\n      return; // it'll be handled elsewhere\n    }\n\n    if (!event.context) {\n      if (firstEvent) {\n        logger.warn(messages.eventWithoutContext());\n        firstEvent = false;\n      }\n      return;\n    }\n    firstEvent = false;\n\n    if (shouldEnqueueEvent()) {\n      logger.debug(messages.debugEnqueueingEvent(event.kind));\n      events.enqueue(event);\n    }\n  }\n\n  function notifyInspectionFlagUsed(key, detail) {\n    if (inspectorManager.hasListeners(InspectorTypes.flagUsed)) {\n      inspectorManager.onFlagUsed(key, detail, ident.getContext());\n    }\n  }\n\n  function notifyInspectionIdentityChanged() {\n    if (inspectorManager.hasListeners(InspectorTypes.clientIdentityChanged)) {\n      inspectorManager.onIdentityChanged(ident.getContext());\n    }\n  }\n\n  function notifyInspectionFlagChanged(data, newFlag) {\n    if (inspectorManager.hasListeners(InspectorTypes.flagDetailChanged)) {\n      inspectorManager.onFlagChanged(data.key, getFlagDetail(newFlag));\n    }\n  }\n\n  function notifyInspectionFlagsChanged() {\n    if (inspectorManager.hasListeners(InspectorTypes.flagDetailsChanged)) {\n      inspectorManager.onFlags(\n        Object.entries(flags)\n          .map(([key, value]) => ({ key, detail: getFlagDetail(value) }))\n          .reduce((acc, cur) => {\n            // eslint-disable-next-line no-param-reassign\n            acc[cur.key] = cur.detail;\n            return acc;\n          }, {})\n      );\n    }\n  }\n\n  function onIdentifyChange(context) {\n    sendIdentifyEvent(context);\n    notifyInspectionIdentityChanged();\n  }\n\n  function sendIdentifyEvent(context) {\n    if (stateProvider) {\n      // In paired mode, the other client is responsible for sending identify events\n      return;\n    }\n    if (context) {\n      enqueueEvent({\n        kind: 'identify',\n        context,\n        creationDate: new Date().getTime(),\n      });\n    }\n  }\n\n  function sendFlagEvent(key, detail, defaultValue, includeReason) {\n    const context = ident.getContext();\n    const now = new Date();\n    const value = detail ? detail.value : null;\n\n    const event = {\n      kind: 'feature',\n      key: key,\n      context,\n      value: value,\n      variation: detail ? detail.variationIndex : null,\n      default: defaultValue,\n      creationDate: now.getTime(),\n    };\n    const flag = flags[key];\n    if (flag) {\n      event.version = flag.flagVersion ? flag.flagVersion : flag.version;\n      event.trackEvents = flag.trackEvents;\n      event.debugEventsUntilDate = flag.debugEventsUntilDate;\n    }\n    if ((includeReason || (flag && flag.trackReason)) && detail) {\n      event.reason = detail.reason;\n    }\n\n    enqueueEvent(event);\n  }\n\n  function verifyContext(context) {\n    // The context will already have been processed to have a string key, so we\n    // do not need to allow for legacy keys in the check.\n    if (checkContext(context, false)) {\n      return Promise.resolve(context);\n    } else {\n      return Promise.reject(new errors.LDInvalidUserError(messages.invalidContext()));\n    }\n  }\n\n  function identify(context, newHash, onDone) {\n    if (closed) {\n      return utils.wrapPromiseCallback(Promise.resolve({}), onDone);\n    }\n    if (stateProvider) {\n      // We're being controlled by another client instance, so only that instance is allowed to change the context\n      logger.warn(messages.identifyDisabled());\n      return utils.wrapPromiseCallback(Promise.resolve(utils.transformVersionedValuesToValues(flags)), onDone);\n    }\n    const clearFirst = useLocalStorage && persistentFlagStore ? persistentFlagStore.clearFlags() : Promise.resolve();\n    return utils.wrapPromiseCallback(\n      clearFirst\n        .then(() => anonymousContextProcessor.processContext(context))\n        .then(verifyContext)\n        .then(validatedContext =>\n          requestor\n            .fetchFlagSettings(validatedContext, newHash)\n            // the following then() is nested within this one so we can use realUser from the previous closure\n            .then(requestedFlags => {\n              const flagValueMap = utils.transformVersionedValuesToValues(requestedFlags);\n              ident.setContext(validatedContext);\n              hash = newHash;\n              if (requestedFlags) {\n                return replaceAllFlags(requestedFlags).then(() => flagValueMap);\n              } else {\n                return flagValueMap;\n              }\n            })\n        )\n        .then(flagValueMap => {\n          if (streamActive) {\n            connectStream();\n          }\n          return flagValueMap;\n        })\n        .catch(err => {\n          emitter.maybeReportError(err);\n          return Promise.reject(err);\n        }),\n      onDone\n    );\n  }\n\n  function getContext() {\n    return ident.getContext();\n  }\n\n  function flush(onDone) {\n    return utils.wrapPromiseCallback(sendEvents ? events.flush() : Promise.resolve(), onDone);\n  }\n\n  function variation(key, defaultValue) {\n    return variationDetailInternal(key, defaultValue, true, false, false, true).value;\n  }\n\n  function variationDetail(key, defaultValue) {\n    return variationDetailInternal(key, defaultValue, true, true, false, true);\n  }\n\n  function variationDetailInternal(key, defaultValue, sendEvent, includeReasonInEvent, isAllFlags, notifyInspection) {\n    let detail;\n    let flag;\n\n    if (flags && utils.objectHasOwnProperty(flags, key) && flags[key] && !flags[key].deleted) {\n      flag = flags[key];\n      detail = getFlagDetail(flag);\n      if (flag.value === null || flag.value === undefined) {\n        detail.value = defaultValue;\n      }\n    } else {\n      detail = { value: defaultValue, variationIndex: null, reason: { kind: 'ERROR', errorKind: 'FLAG_NOT_FOUND' } };\n    }\n\n    if (sendEvent) {\n      // For an all-flags evaluation, with events enabled, each flag will get an event, so we do not\n      // need to duplicate the prerequisites.\n      if (!isAllFlags) {\n        flag?.prerequisites?.forEach(key => {\n          variationDetailInternal(key, undefined, sendEvent, false, false, false);\n        });\n      }\n      sendFlagEvent(key, detail, defaultValue, includeReasonInEvent);\n    }\n\n    // For the all flags case `onFlags` will be called instead.\n    if (!isAllFlags && notifyInspection) {\n      notifyInspectionFlagUsed(key, detail);\n    }\n\n    return detail;\n  }\n\n  function getFlagDetail(flag) {\n    return {\n      value: flag.value,\n      variationIndex: flag.variation === undefined ? null : flag.variation,\n      reason: flag.reason || null,\n    };\n    // Note, the logic above ensures that variationIndex and reason will always be null rather than\n    // undefined if we don't have values for them. That's just to avoid subtle errors that depend on\n    // whether an object was JSON-encoded with null properties omitted or not.\n  }\n\n  function allFlags() {\n    const results = {};\n\n    if (!flags) {\n      return results;\n    }\n\n    for (const key in flags) {\n      if (utils.objectHasOwnProperty(flags, key) && !flags[key].deleted) {\n        results[key] = variationDetailInternal(\n          key,\n          null,\n          !options.sendEventsOnlyForVariation,\n          false,\n          true,\n          false\n        ).value;\n      }\n    }\n\n    return results;\n  }\n\n  function userContextKind(user) {\n    return user.anonymous ? 'anonymousUser' : 'user';\n  }\n\n  function track(key, data, metricValue) {\n    if (typeof key !== 'string') {\n      emitter.maybeReportError(new errors.LDInvalidEventKeyError(messages.unknownCustomEventKey(key)));\n      return;\n    }\n    if (metricValue !== undefined && typeof metricValue !== 'number') {\n      logger.warn(messages.invalidMetricValue(typeof metricValue));\n    }\n\n    // The following logic was used only for the JS browser SDK (js-client-sdk) and\n    // is no longer needed as of version 2.9.13 of that SDK. The other client-side\n    // JS-based SDKs did not define customEventFilter, and now none of them do. We\n    // can remove this in the next major version of the common code, when it's OK to\n    // make breaking changes to our internal API contracts.\n    if (platform.customEventFilter && !platform.customEventFilter(key)) {\n      logger.warn(messages.unknownCustomEventKey(key));\n    }\n\n    const context = ident.getContext();\n    const e = {\n      kind: 'custom',\n      key: key,\n      context,\n      url: platform.getCurrentUrl(),\n      creationDate: new Date().getTime(),\n    };\n    if (context && context.anonymous) {\n      e.contextKind = userContextKind(context);\n    }\n    // Note, check specifically for null/undefined because it is legal to set these fields to a falsey value.\n    if (data !== null && data !== undefined) {\n      e.data = data;\n    }\n    if (metricValue !== null && metricValue !== undefined) {\n      e.metricValue = metricValue;\n    }\n    enqueueEvent(e);\n  }\n\n  function connectStream() {\n    streamActive = true;\n    if (!ident.getContext()) {\n      return;\n    }\n    const tryParseData = jsonData => {\n      try {\n        return JSON.parse(jsonData);\n      } catch (err) {\n        emitter.maybeReportError(new errors.LDInvalidDataError(messages.invalidData()));\n        return undefined;\n      }\n    };\n    stream.connect(ident.getContext(), hash, {\n      ping: function() {\n        logger.debug(messages.debugStreamPing());\n        const contextAtTimeOfPingEvent = ident.getContext();\n        requestor\n          .fetchFlagSettings(contextAtTimeOfPingEvent, hash)\n          .then(requestedFlags => {\n            // Check whether the current context is still the same - we don't want to overwrite the flags if\n            // the application has called identify() while this request was in progress\n            if (utils.deepEquals(contextAtTimeOfPingEvent, ident.getContext())) {\n              replaceAllFlags(requestedFlags || {});\n            }\n          })\n          .catch(err => {\n            emitter.maybeReportError(new errors.LDFlagFetchError(messages.errorFetchingFlags(err)));\n          });\n      },\n      put: function(e) {\n        const data = tryParseData(e.data);\n        if (!data) {\n          return;\n        }\n        logger.debug(messages.debugStreamPut());\n        replaceAllFlags(data);\n        // Don't wait for this Promise to be resolved; note that replaceAllFlags is guaranteed\n        // never to have an unhandled rejection\n      },\n      patch: function(e) {\n        const data = tryParseData(e.data);\n        if (!data) {\n          return;\n        }\n        // If both the flag and the patch have a version property, then the patch version must be\n        // greater than the flag version for us to accept the patch.  If either one has no version\n        // then the patch always succeeds.\n        const oldFlag = flags[data.key];\n        if (!oldFlag || !oldFlag.version || !data.version || oldFlag.version < data.version) {\n          logger.debug(messages.debugStreamPatch(data.key));\n          const mods = {};\n          const newFlag = utils.extend({}, data);\n          delete newFlag['key'];\n          flags[data.key] = newFlag;\n          const newDetail = getFlagDetail(newFlag);\n          if (oldFlag) {\n            mods[data.key] = { previous: oldFlag.value, current: newDetail };\n          } else {\n            mods[data.key] = { current: newDetail };\n          }\n          notifyInspectionFlagChanged(data, newFlag);\n          handleFlagChanges(mods); // don't wait for this Promise to be resolved\n        } else {\n          logger.debug(messages.debugStreamPatchIgnored(data.key));\n        }\n      },\n      delete: function(e) {\n        const data = tryParseData(e.data);\n        if (!data) {\n          return;\n        }\n        if (!flags[data.key] || flags[data.key].version < data.version) {\n          logger.debug(messages.debugStreamDelete(data.key));\n          const mods = {};\n          if (flags[data.key] && !flags[data.key].deleted) {\n            mods[data.key] = { previous: flags[data.key].value };\n          }\n          flags[data.key] = { version: data.version, deleted: true };\n          notifyInspectionFlagChanged(data, flags[data.key]);\n          handleFlagChanges(mods); // don't wait for this Promise to be resolved\n        } else {\n          logger.debug(messages.debugStreamDeleteIgnored(data.key));\n        }\n      },\n    });\n  }\n\n  function disconnectStream() {\n    if (streamActive) {\n      stream.disconnect();\n      streamActive = false;\n    }\n  }\n\n  // Returns a Promise which will be resolved when we have completely updated the internal flags state,\n  // dispatched all change events, and updated local storage if appropriate. This Promise is guaranteed\n  // never to have an unhandled rejection.\n  function replaceAllFlags(newFlags) {\n    const changes = {};\n\n    if (!newFlags) {\n      return Promise.resolve();\n    }\n\n    for (const key in flags) {\n      if (utils.objectHasOwnProperty(flags, key) && flags[key]) {\n        if (newFlags[key] && !utils.deepEquals(newFlags[key].value, flags[key].value)) {\n          changes[key] = { previous: flags[key].value, current: getFlagDetail(newFlags[key]) };\n        } else if (!newFlags[key] || newFlags[key].deleted) {\n          changes[key] = { previous: flags[key].value };\n        }\n      }\n    }\n    for (const key in newFlags) {\n      if (utils.objectHasOwnProperty(newFlags, key) && newFlags[key] && (!flags[key] || flags[key].deleted)) {\n        changes[key] = { current: getFlagDetail(newFlags[key]) };\n      }\n    }\n\n    flags = { ...newFlags };\n\n    notifyInspectionFlagsChanged();\n\n    return handleFlagChanges(changes).catch(() => {}); // swallow any exceptions from this Promise\n  }\n\n  // Returns a Promise which will be resolved when we have dispatched all change events and updated\n  // local storage if appropriate.\n  function handleFlagChanges(changes) {\n    const keys = Object.keys(changes);\n\n    if (keys.length > 0) {\n      const changeEventParams = {};\n      keys.forEach(key => {\n        const current = changes[key].current;\n        const value = current ? current.value : undefined;\n        const previous = changes[key].previous;\n        emitter.emit(changeEvent + ':' + key, value, previous);\n        changeEventParams[key] = current ? { current: value, previous: previous } : { previous: previous };\n      });\n\n      emitter.emit(changeEvent, changeEventParams);\n      emitter.emit(internalChangeEvent, flags);\n\n      // By default, we send feature evaluation events whenever we have received new flag values -\n      // the client has in effect evaluated these flags just by receiving them. This can be suppressed\n      // by setting \"sendEventsOnlyForVariation\". Also, if we have a stateProvider, we don't send these\n      // events because we assume they have already been sent by the other client that gave us the flags\n      // (when it received them in the first place).\n      if (!options.sendEventsOnlyForVariation && !stateProvider) {\n        keys.forEach(key => {\n          sendFlagEvent(key, changes[key].current);\n        });\n      }\n    }\n\n    if (useLocalStorage && persistentFlagStore) {\n      return persistentFlagStore.saveFlags(flags);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  function on(event, handler, context) {\n    if (isChangeEventKey(event)) {\n      subscribedToChangeEvents = true;\n      if (inited) {\n        updateStreamingState();\n      }\n      emitter.on(event, handler, context);\n    } else {\n      emitter.on(...arguments);\n    }\n  }\n\n  function off(event) {\n    emitter.off(...arguments);\n    if (isChangeEventKey(event)) {\n      let haveListeners = false;\n      emitter.getEvents().forEach(key => {\n        if (isChangeEventKey(key) && emitter.getEventListenerCount(key) > 0) {\n          haveListeners = true;\n        }\n      });\n      if (!haveListeners) {\n        subscribedToChangeEvents = false;\n        if (streamActive && streamForcedState === undefined) {\n          disconnectStream();\n        }\n      }\n    }\n  }\n\n  function setStreaming(state) {\n    const newState = state === null ? undefined : state;\n    if (newState !== streamForcedState) {\n      streamForcedState = newState;\n      updateStreamingState();\n    }\n  }\n\n  function updateStreamingState() {\n    const shouldBeStreaming = streamForcedState || (subscribedToChangeEvents && streamForcedState === undefined);\n    if (shouldBeStreaming && !streamActive) {\n      connectStream();\n    } else if (!shouldBeStreaming && streamActive) {\n      disconnectStream();\n    }\n    if (diagnosticsManager) {\n      diagnosticsManager.setStreaming(shouldBeStreaming);\n    }\n  }\n\n  function isChangeEventKey(event) {\n    return event === changeEvent || event.substr(0, changeEvent.length + 1) === changeEvent + ':';\n  }\n\n  if (typeof options.bootstrap === 'string' && options.bootstrap.toUpperCase() === 'LOCALSTORAGE') {\n    if (persistentFlagStore) {\n      useLocalStorage = true;\n    } else {\n      logger.warn(messages.localStorageUnavailable());\n    }\n  }\n\n  if (typeof options.bootstrap === 'object') {\n    // Set the flags as soon as possible before we get into any async code, so application code can read\n    // them even if the ready event has not yet fired.\n    flags = readFlagsFromBootstrap(options.bootstrap);\n  }\n\n  if (stateProvider) {\n    // The stateProvider option is used in the Electron SDK, to allow a client instance in the main process\n    // to control another client instance (i.e. this one) in the renderer process. We can't predict which\n    // one will start up first, so the initial state may already be available for us or we may have to wait\n    // to receive it.\n    const state = stateProvider.getInitialState();\n    if (state) {\n      initFromStateProvider(state);\n    } else {\n      stateProvider.on('init', initFromStateProvider);\n    }\n    stateProvider.on('update', updateFromStateProvider);\n  } else {\n    finishInit().catch(signalFailedInit);\n  }\n\n  function finishInit() {\n    if (!env) {\n      return Promise.reject(new errors.LDInvalidEnvironmentIdError(messages.environmentNotSpecified()));\n    }\n    return anonymousContextProcessor\n      .processContext(context)\n      .then(verifyContext)\n      .then(validatedContext => {\n        ident.setContext(validatedContext);\n        if (typeof options.bootstrap === 'object') {\n          // flags have already been set earlier\n          return signalSuccessfulInit();\n        } else if (useLocalStorage) {\n          return finishInitWithLocalStorage();\n        } else {\n          return finishInitWithPolling();\n        }\n      });\n  }\n\n  function finishInitWithLocalStorage() {\n    return persistentFlagStore.loadFlags().then(storedFlags => {\n      if (storedFlags === null || storedFlags === undefined) {\n        flags = {};\n        return requestor\n          .fetchFlagSettings(ident.getContext(), hash)\n          .then(requestedFlags => replaceAllFlags(requestedFlags || {}))\n          .then(signalSuccessfulInit)\n          .catch(err => {\n            const initErr = new errors.LDFlagFetchError(messages.errorFetchingFlags(err));\n            signalFailedInit(initErr);\n          });\n      } else {\n        // We're reading the flags from local storage. Signal that we're ready,\n        // then update localStorage for the next page load. We won't signal changes or update\n        // the in-memory flags unless you subscribe for changes\n        flags = storedFlags;\n        utils.onNextTick(signalSuccessfulInit);\n\n        return requestor\n          .fetchFlagSettings(ident.getContext(), hash)\n          .then(requestedFlags => replaceAllFlags(requestedFlags))\n          .catch(err => emitter.maybeReportError(err));\n      }\n    });\n  }\n\n  function finishInitWithPolling() {\n    return requestor\n      .fetchFlagSettings(ident.getContext(), hash)\n      .then(requestedFlags => {\n        flags = requestedFlags || {};\n\n        notifyInspectionFlagsChanged();\n        // Note, we don't need to call updateSettings here because local storage and change events are not relevant\n        signalSuccessfulInit();\n      })\n      .catch(err => {\n        flags = {};\n        signalFailedInit(err);\n      });\n  }\n\n  function initFromStateProvider(state) {\n    environment = state.environment;\n    ident.setContext(state.context);\n    flags = { ...state.flags };\n    utils.onNextTick(signalSuccessfulInit);\n  }\n\n  function updateFromStateProvider(state) {\n    if (state.context) {\n      ident.setContext(state.context);\n    }\n    if (state.flags) {\n      replaceAllFlags(state.flags); // don't wait for this Promise to be resolved\n    }\n  }\n\n  function signalSuccessfulInit() {\n    logger.info(messages.clientInitialized());\n    inited = true;\n    updateStreamingState();\n    initializationStateTracker.signalSuccess();\n  }\n\n  function signalFailedInit(err) {\n    initializationStateTracker.signalFailure(err);\n  }\n\n  function start() {\n    if (sendEvents) {\n      if (diagnosticsManager) {\n        diagnosticsManager.start();\n      }\n      events.start();\n    }\n  }\n\n  function close(onDone) {\n    if (closed) {\n      return utils.wrapPromiseCallback(Promise.resolve(), onDone);\n    }\n    const finishClose = () => {\n      closed = true;\n      flags = {};\n    };\n    const p = Promise.resolve()\n      .then(() => {\n        disconnectStream();\n        if (diagnosticsManager) {\n          diagnosticsManager.stop();\n        }\n        if (sendEvents) {\n          events.stop();\n          return events.flush();\n        }\n      })\n      .then(finishClose)\n      .catch(finishClose);\n    return utils.wrapPromiseCallback(p, onDone);\n  }\n\n  function getFlagsInternal() {\n    // used by Electron integration\n    return flags;\n  }\n\n  function waitForInitializationWithTimeout(timeout) {\n    if (timeout > highTimeoutThreshold) {\n      logger.warn(\n        'The waitForInitialization function was called with a timeout greater than ' +\n          `${highTimeoutThreshold} seconds. We recommend a timeout of ` +\n          `${highTimeoutThreshold} seconds or less.`\n      );\n    }\n\n    const initPromise = initializationStateTracker.getInitializationPromise();\n    const timeoutPromise = timedPromise(timeout, 'waitForInitialization');\n\n    return Promise.race([timeoutPromise, initPromise]).catch(e => {\n      if (e instanceof errors.LDTimeoutError) {\n        logger.error(`waitForInitialization error: ${e}`);\n      }\n      throw e;\n    });\n  }\n\n  function waitForInitialization(timeout = undefined) {\n    if (timeout !== undefined && timeout !== null) {\n      if (typeof timeout === 'number') {\n        return waitForInitializationWithTimeout(timeout);\n      }\n      logger.warn('The waitForInitialization method was provided with a non-numeric timeout.');\n    }\n    logger.warn(\n      'The waitForInitialization function was called without a timeout specified.' +\n        ' In a future version a default timeout will be applied.'\n    );\n    return initializationStateTracker.getInitializationPromise();\n  }\n\n  const client = {\n    waitForInitialization,\n    waitUntilReady: () => initializationStateTracker.getReadyPromise(),\n    identify: identify,\n    getContext: getContext,\n    variation: variation,\n    variationDetail: variationDetail,\n    track: track,\n    on: on,\n    off: off,\n    setStreaming: setStreaming,\n    flush: flush,\n    allFlags: allFlags,\n    close: close,\n  };\n\n  return {\n    client: client, // The client object containing all public methods.\n    options: options, // The validated configuration object, including all defaults.\n    emitter: emitter, // The event emitter which can be used to log errors or trigger events.\n    ident: ident, // The Identity object that manages the current context.\n    logger: logger, // The logging abstraction.\n    requestor: requestor, // The Requestor object.\n    start: start, // Starts the client once the environment is ready.\n    enqueueEvent: enqueueEvent, // Puts an analytics event in the queue, if event sending is enabled.\n    getFlagsInternal: getFlagsInternal, // Returns flag data structure with all details.\n    getEnvironmentId: () => environment, // Gets the environment ID (this may have changed since initialization, if we have a state provider)\n    internalChangeEventName: internalChangeEvent, // This event is triggered whenever we have new flag state.\n  };\n}\n\nmodule.exports = {\n  initialize,\n  commonBasicLogger,\n  errors,\n  messages,\n  utils,\n  getContextKeys,\n};\n", "const { commonBasicLogger } = require('launchdarkly-js-sdk-common');\n\nfunction basicLogger(options) {\n  return commonBasicLogger({ destination: console.log, ...options });\n}\n\nmodule.exports = {\n  basicLogger,\n};\n", "function isSyncXhrSupported() {\n  // This is temporary logic to disable synchronous XHR in Chrome 73 and above. In all other browsers,\n  // we will assume it is supported. See https://github.com/launchdarkly/js-client-sdk/issues/147\n  const userAgent = window.navigator && window.navigator.userAgent;\n  if (userAgent) {\n    const chromeMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    if (chromeMatch) {\n      const version = parseInt(chromeMatch[2], 10);\n      return version < 73;\n    }\n  }\n  return true;\n}\n\nconst emptyResult = { promise: Promise.resolve({ status: 200, header: () => null, body: null }) };\n\nexport default function newHttpRequest(method, url, headers, body, pageIsClosing) {\n  if (pageIsClosing) {\n    // When the page is about to close, we have to use synchronous XHR (until we migrate to sendBeacon).\n    // But not all browsers support this.\n    if (!isSyncXhrSupported()) {\n      return emptyResult;\n      // Note that we return a fake success response, because we don't want the request to be retried in this case.\n    }\n  }\n\n  const xhr = new window.XMLHttpRequest();\n  xhr.open(method, url, !pageIsClosing);\n  for (const key in headers || {}) {\n    if (Object.prototype.hasOwnProperty.call(headers, key)) {\n      xhr.setRequestHeader(key, headers[key]);\n    }\n  }\n  if (pageIsClosing) {\n    try {\n      xhr.send(body); // We specified synchronous mode when we called xhr.open\n    } catch (e) {\n      // do nothing intentionally to suppress noise for now\n    }\n    return emptyResult; // Again, we never want a request to be retried in this case, so we must say it succeeded.\n  } else {\n    let cancelled;\n    const p = new Promise((resolve, reject) => {\n      xhr.addEventListener('load', () => {\n        if (cancelled) {\n          return;\n        }\n        resolve({\n          status: xhr.status,\n          header: (key) => xhr.getResponseHeader(key),\n          body: xhr.responseText,\n        });\n      });\n      xhr.addEventListener('error', () => {\n        if (cancelled) {\n          return;\n        }\n        reject(new Error());\n      });\n      xhr.send(body);\n    });\n    const cancel = () => {\n      cancelled = true;\n      xhr.abort();\n    };\n    return { promise: p, cancel: cancel };\n  }\n}\n", "'use strict';\n\nmodule.exports = string => {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n};\n", "import escapeStringRegexp from 'escape-string-regexp';\n\nexport function doesUrlMatch(matcher, href, search, hash) {\n  const keepHash = (matcher.kind === 'substring' || matcher.kind === 'regex') && hash.includes('/');\n  const canonicalUrl = (keepHash ? href : href.replace(hash, '')).replace(search, '');\n\n  let regex;\n  let testUrl;\n\n  switch (matcher.kind) {\n    case 'exact':\n      testUrl = href;\n      regex = new RegExp('^' + escapeStringRegexp(matcher.url) + '/?$');\n      break;\n    case 'canonical':\n      testUrl = canonicalUrl;\n      regex = new RegExp('^' + escapeStringRegexp(matcher.url) + '/?$');\n      break;\n    case 'substring':\n      testUrl = canonicalUrl;\n      regex = new RegExp('.*' + escapeStringRegexp(matcher.substring) + '.*$');\n      break;\n    case 'regex':\n      testUrl = canonicalUrl;\n      regex = new RegExp(matcher.pattern);\n      break;\n    default:\n      return false;\n  }\n  return regex.test(testUrl);\n}\n\nfunction findGoalsForClick(event, clickGoals) {\n  const matches = [];\n\n  for (let i = 0; i < clickGoals.length; i++) {\n    let target = event.target;\n    const goal = clickGoals[i];\n    const selector = goal.selector;\n    const elements = document.querySelectorAll(selector);\n    while (target && elements.length > 0) {\n      for (let j = 0; j < elements.length; j++) {\n        if (target === elements[j]) {\n          matches.push(goal);\n        }\n      }\n      target = target.parentNode;\n    }\n  }\n\n  return matches;\n}\n\nexport default function GoalTracker(goals, onEvent) {\n  const tracker = {};\n  let listenerFn = null;\n\n  const clickGoals = [];\n\n  for (let i = 0; i < goals.length; i++) {\n    const goal = goals[i];\n    const urls = goal.urls || [];\n\n    for (let j = 0; j < urls.length; j++) {\n      if (doesUrlMatch(urls[j], window.location.href, window.location.search, window.location.hash)) {\n        if (goal.kind === 'pageview') {\n          onEvent('pageview', goal);\n        } else {\n          clickGoals.push(goal);\n          onEvent('click_pageview', goal);\n        }\n        break;\n      }\n    }\n  }\n\n  if (clickGoals.length > 0) {\n    listenerFn = function (event) {\n      const goals = findGoalsForClick(event, clickGoals);\n      for (let i = 0; i < goals.length; i++) {\n        onEvent('click', goals[i]);\n      }\n    };\n\n    document.addEventListener('click', listenerFn);\n  }\n\n  tracker.dispose = function () {\n    document.removeEventListener('click', listenerFn);\n  };\n\n  return tracker;\n}\n", "import * as common from 'launchdarkly-js-sdk-common';\nimport GoalTracker from './GoalTracker';\n\nconst locationWatcherInterval = 300;\n\nexport default function GoalManager(clientVars, readyCallback) {\n  let goals;\n  let goalTracker;\n\n  const ret = {};\n\n  function getGoalsPath() {\n    return '/sdk/goals/' + clientVars.getEnvironmentId();\n  }\n\n  function refreshGoalTracker() {\n    if (goalTracker) {\n      goalTracker.dispose();\n    }\n    if (goals && goals.length) {\n      goalTracker = GoalTracker(goals, sendGoalEvent);\n    }\n  }\n\n  function sendGoalEvent(kind, goal) {\n    const context = clientVars.ident.getContext();\n    const event = {\n      kind: kind,\n      key: goal.key,\n      data: null,\n      url: window.location.href,\n      creationDate: new Date().getTime(),\n      context: context,\n    };\n\n    if (kind === 'click') {\n      event.selector = goal.selector;\n    }\n\n    return clientVars.enqueueEvent(event);\n  }\n\n  function watchLocation(interval, callback) {\n    let previousUrl = window.location.href;\n    let currentUrl;\n\n    function checkUrl() {\n      currentUrl = window.location.href;\n\n      if (currentUrl !== previousUrl) {\n        previousUrl = currentUrl;\n        callback();\n      }\n    }\n\n    function poll(fn, interval) {\n      fn();\n      setTimeout(() => {\n        poll(fn, interval);\n      }, interval);\n    }\n\n    poll(checkUrl, interval);\n\n    if (window.history && window.history.pushState) {\n      window.addEventListener('popstate', checkUrl);\n    } else {\n      window.addEventListener('hashchange', checkUrl);\n    }\n  }\n\n  clientVars.requestor\n    .fetchJSON(getGoalsPath())\n    .then((g) => {\n      if (g && g.length > 0) {\n        goals = g;\n        goalTracker = GoalTracker(goals, sendGoalEvent);\n        watchLocation(locationWatcherInterval, refreshGoalTracker);\n      }\n      readyCallback();\n    })\n    .catch((err) => {\n      clientVars.emitter.maybeReportError(\n        new common.errors.LDUnexpectedResponseError('Error fetching goals: ' + (err && err.message) ? err.message : err)\n      );\n      readyCallback();\n    });\n\n  return ret;\n}\n", "import * as common from 'launchdarkly-js-sdk-common';\nimport * as importBasicLogger from './basicLogger';\nimport browserPlatform from './browserPlatform';\nimport GoalManager from './GoalManager';\n\nconst goalsEvent = 'goalsReady';\nconst extraOptionDefs = {\n  fetchGoals: { default: true },\n  hash: { type: 'string' },\n  eventProcessor: { type: 'object' }, // used only in tests\n  eventUrlTransformer: { type: 'function' },\n  disableSyncEventPost: { default: false },\n};\n\n// Pass our platform object to the common code to create the browser version of the client\nexport function initialize(env, user, options = {}) {\n  const platform = browserPlatform(options);\n  const clientVars = common.initialize(env, user, options, platform, extraOptionDefs);\n\n  const client = clientVars.client;\n  const validatedOptions = clientVars.options;\n  const emitter = clientVars.emitter;\n\n  const goalsPromise = new Promise((resolve) => {\n    const onGoals = emitter.on(goalsEvent, () => {\n      emitter.off(goalsEvent, onGoals);\n      resolve();\n    });\n  });\n  client.waitUntilGoalsReady = () => goalsPromise;\n\n  if (validatedOptions.fetchGoals) {\n    GoalManager(clientVars, () => emitter.emit(goalsEvent));\n    // Don't need to save a reference to the GoalManager - its constructor takes care of setting\n    // up the necessary event wiring\n  } else {\n    emitter.emit(goalsEvent);\n  }\n\n  if (document.readyState !== 'complete') {\n    window.addEventListener('load', clientVars.start);\n  } else {\n    clientVars.start();\n  }\n\n  const syncFlush = () => {\n    // Synchronous events are not available in all browsers, but where they\n    // are we should attempt to use them. This increases the chance of the events\n    // being delivered.\n    platform.synchronousFlush = true;\n    client.flush().catch(() => {});\n    platform.synchronousFlush = false;\n  };\n\n  // When the visibility of the page changes to hidden we want to flush any pending events.\n  //\n  // This is handled with visibility, instead of beforeunload/unload\n  // because those events are not compatible with the bfcache and are unlikely\n  // to be called in many situations. For more information see: https://developer.chrome.com/blog/page-lifecycle-api/\n  //\n  // Redundancy is included by using both the visibilitychange handler as well as\n  // pagehide, because different browsers, and versions have different bugs with each.\n  // This also may provide more opportunity for the events to get flushed.\n  //\n  const handleVisibilityChange = () => {\n    if (document.visibilityState === 'hidden') {\n      syncFlush();\n    }\n  };\n\n  document.addEventListener('visibilitychange', handleVisibilityChange);\n  window.addEventListener('pagehide', syncFlush);\n\n  return client;\n}\n\nexport const basicLogger = importBasicLogger.basicLogger;\n\nexport const createConsoleLogger = common.createConsoleLogger;\n\nexport const version = VERSION;\n\nfunction deprecatedInitialize(env, user, options = {}) {\n  console && console.warn && console.warn(common.messages.deprecated('default export', 'named LDClient export')); // eslint-disable-line no-console\n  return initialize(env, user, options);\n}\n\nexport default { initialize: deprecatedInitialize, version };\n", "import newHttpRequest from './httpRequest';\n\nexport default function makeBrowserPlatform(options) {\n  const ret = {\n    userAgentHeaderName: 'X-LaunchDarkly-User-Agent',\n  };\n\n  ret.synchronousFlush = false; // this will be set to true by index.js if the page is hidden\n\n  // XMLHttpRequest may not exist if we're running in a server-side rendering context\n  if (window.XMLHttpRequest) {\n    const disableSyncFlush = options && options.disableSyncEventPost;\n    ret.httpRequest = (method, url, headers, body) => {\n      const syncFlush = ret.synchronousFlush & !disableSyncFlush;\n      ret.synchronousFlush = false;\n      return newHttpRequest(method, url, headers, body, syncFlush);\n    };\n  }\n\n  let hasCors;\n  ret.httpAllowsPost = () => {\n    // We compute this lazily because calling XMLHttpRequest() at initialization time can disrupt tests\n    if (hasCors === undefined) {\n      hasCors = window.XMLHttpRequest ? 'withCredentials' in new window.XMLHttpRequest() : false;\n    }\n    return hasCors;\n  };\n\n  // Image-based mechanism for sending events if POST isn't available\n  ret.httpFallbackPing = (url) => {\n    const img = new window.Image();\n    img.src = url;\n  };\n\n  const eventUrlTransformer = options && options.eventUrlTransformer;\n  ret.getCurrentUrl = () => (eventUrlTransformer ? eventUrlTransformer(window.location.href) : window.location.href);\n\n  ret.isDoNotTrack = () => {\n    let flag;\n    if (window.navigator && window.navigator.doNotTrack !== undefined) {\n      flag = window.navigator.doNotTrack; // FF, Chrome\n    } else if (window.navigator && window.navigator.msDoNotTrack !== undefined) {\n      flag = window.navigator.msDoNotTrack; // IE 9/10\n    } else {\n      flag = window.doNotTrack; // IE 11+, Safari\n    }\n    return flag === 1 || flag === true || flag === '1' || flag === 'yes';\n  };\n\n  try {\n    if (window.localStorage) {\n      ret.localStorage = {\n        get: (key) =>\n          new Promise((resolve) => {\n            resolve(window.localStorage.getItem(key));\n          }),\n        set: (key, value) =>\n          new Promise((resolve) => {\n            window.localStorage.setItem(key, value);\n            resolve();\n          }),\n        clear: (key) =>\n          new Promise((resolve) => {\n            window.localStorage.removeItem(key);\n            resolve();\n          }),\n      };\n    }\n  } catch (e) {\n    // In some browsers (such as Chrome), even looking at window.localStorage at all will cause a\n    // security error if the feature is disabled.\n    ret.localStorage = null;\n  }\n\n  // The browser built-in EventSource implementations do not support setting the method used for\n  // the request. When useReport is true, we ensure sending the user in the body of a REPORT request\n  // rather than in the URL path. If a polyfill for EventSource that supports setting the request\n  // method is provided (currently, launchdarkly-eventsource is the only polyfill that both supports\n  // it and gives us a way to *know* that it supports it), we use the polyfill to connect to a flag\n  // stream that will provide evaluated flags for the specific user. Otherwise, when useReport is\n  // true, we fall back to a generic  'ping' stream that informs the SDK to make a separate REPORT\n  // request for the user's flag evaluations whenever the flag definitions have been updated.\n  let eventSourceConstructor;\n  const useReport = options && options.useReport;\n  if (\n    useReport &&\n    typeof window.EventSourcePolyfill === 'function' &&\n    window.EventSourcePolyfill.supportedOptions &&\n    window.EventSourcePolyfill.supportedOptions.method\n  ) {\n    ret.eventSourceAllowsReport = true;\n    eventSourceConstructor = window.EventSourcePolyfill;\n  } else {\n    ret.eventSourceAllowsReport = false;\n    eventSourceConstructor = window.EventSource;\n  }\n\n  // If EventSource does not exist, the absence of eventSourceFactory will make us not try to open streams\n  if (window.EventSource) {\n    const timeoutMillis = 300000; // this is only used by polyfills - see below\n\n    ret.eventSourceFactory = (url, options) => {\n      // The standard EventSource constructor doesn't take any options, just a URL. However, some\n      // EventSource polyfills allow us to specify a timeout interval, and in some cases they will\n      // default to a too-short timeout if we don't specify one. So, here, we are setting the\n      // timeout properties that are used by several popular polyfills.\n      // Also, the skipDefaultHeaders property (if supported) tells the polyfill not to add the\n      // Cache-Control header that can cause CORS problems in browsers.\n      // See: https://github.com/launchdarkly/js-eventsource\n      const defaultOptions = {\n        heartbeatTimeout: timeoutMillis,\n        silentTimeout: timeoutMillis,\n        skipDefaultHeaders: true,\n      };\n\n      const esOptions = { ...defaultOptions, ...options };\n\n      return new eventSourceConstructor(url, esOptions);\n    };\n\n    ret.eventSourceIsActive = (es) =>\n      es.readyState === window.EventSource.OPEN || es.readyState === window.EventSource.CONNECTING;\n  }\n\n  ret.userAgent = 'JSClient';\n  ret.version = VERSION;\n\n  ret.diagnosticSdkData = {\n    name: 'js-client-sdk',\n    version: VERSION,\n  };\n\n  ret.diagnosticPlatformData = {\n    name: 'JS',\n  };\n\n  ret.diagnosticUseCombinedEvent = true; // the browser SDK uses the \"diagnostic-combined\" event format\n\n  return ret;\n}\n"],
  "mappings": "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",
  "names": ["createCustomError", "name", "CustomError", "message", "code", "Error", "captureStackTrace", "this", "constructor", "prototype", "LDUnexpectedResponseError", "LDInvalidEnvironmentIdError", "LDInvalidUserError", "LDInvalidEventKeyError", "LDInvalidArgumentError", "LDFlagFetchError", "errors", "LDInvalidDataError", "LDTimeoutError", "isHttpErrorRecoverable", "status", "byteLength_1", "b64", "lens", "getLens", "validLen", "placeHoldersLen", "toByteArray_1", "tmp", "i", "arr", "Arr", "curByte", "len", "revLookup", "charCodeAt", "fromByteArray_1", "uint8", "length", "extraBytes", "parts", "maxChunkLength", "len2", "push", "encodeChunk", "lookup", "join", "Uint8Array", "Array", "indexOf", "start", "end", "num", "output", "isArray", "keyList", "Object", "keys", "hasProp", "hasOwnProperty", "fastDeepEqual", "equal", "a", "b", "key", "arrA", "arrB", "dateA", "Date", "dateB", "getTime", "regexpA", "RegExp", "regexpB", "toString", "call", "userAttrsToStringify", "btoa", "s", "escaped", "unescape", "encodeURIComponent", "base64", "fromByteArray", "objectHasOwnProperty", "object", "getRandomValues", "utils", "appendUrlPath", "baseUrl", "path", "endsWith", "substring", "startsWith", "base64URLEncode", "replace", "clone", "obj", "JSON", "parse", "stringify", "deepEquals", "extend", "objects", "reduce", "acc", "getLDUserAgentString", "platform", "version", "userAgent", "onNextTick", "cb", "setTimeout", "sanitizeContext", "context", "newContext", "kind", "forEach", "attr", "value", "String", "transformValuesToVersionedValues", "flags", "ret", "transformVersionedValuesToValues", "flagsState", "wrapPromiseCallback", "promise", "callback", "then", "error", "Promise", "reject", "rnds8", "rng", "crypto", "bind", "msCrypto", "REGEX", "validate", "uuid", "test", "byteToHex", "substr", "_nodeId", "_clockseq", "offset", "arguments", "toLowerCase", "TypeError", "_lastMSecs", "_lastNSecs", "v", "parseInt", "slice", "v35", "hashfunc", "generateUUID", "namespace", "buf", "str", "bytes", "set", "err", "DNS", "URL", "getOutputLength", "inputLength8", "safeAdd", "x", "y", "lsw", "md5cmn", "q", "t", "cnt", "md5ff", "c", "d", "md5gg", "md5hh", "md5ii", "v3", "msg", "input", "length32", "hexTab", "hex", "charAt", "olda", "oldb", "oldc", "oldd", "length8", "Uint32Array", "v3$1", "f", "z", "ROTL", "n", "v5", "K", "H", "l", "N", "Math", "ceil", "M", "_i", "j", "pow", "floor", "_i2", "W", "_t", "e", "_t2", "T", "v5$1", "options", "node", "clockseq", "seedBytes", "random", "msecs", "now", "nsecs", "dt", "tl", "tmh", "rnds", "logLevels", "loggers", "commonBasicLogger", "formatFn", "destination", "toConsole", "methodName", "line", "console", "destinations", "prependLevelToMessage", "prefix", "minLevel", "level", "write", "levelIndex", "levelName", "args", "fullPrefix", "tempArgs", "log", "logger", "validateLogger", "errorString", "docLink", "messages", "bootstrapInvalid", "bootstrapOldFormat", "clientInitialized", "clientNotReady", "debugEnqueueingEvent", "debugPostingDiagnosticEvent", "event", "debugPostingEvents", "count", "debugStreamDelete", "debugStreamDeleteIgnored", "debugStreamPatch", "debugStreamPatchIgnored", "debugStreamPing", "debugPolling", "url", "debugStreamPut", "deprecated", "oldName", "newName", "environmentNotFound", "environmentNotSpecified", "errorFetchingFlags", "eventCapacityExceeded", "eventWithoutContext", "httpErrorMessage", "retryMessage", "httpUnavailable", "identifyDisabled", "inspectorMethodError", "type", "invalidContentType", "contentType", "invalidData", "invalidInspector", "invalidKey", "invalidMetricValue", "badType", "invalidContext", "invalidTagValue", "localStorageUnavailable", "networkError", "optionBelowMinimum", "minimum", "streamClosing", "streamConnecting", "streamError", "streamReconnectDelay", "tagValueTooLong", "unknownCustomEventKey", "unknownOption", "contextNotSpecified", "unrecoverableStreamError", "wrongOptionType", "expectedType", "actualType", "wrongOptionTypeBoolean", "require$$0", "baseOptionDefs", "default", "streamUrl", "eventsUrl", "sendEvents", "streaming", "sendLDHeaders", "requestHeaderTransform", "sendEventsOnlyForVariation", "useReport", "evaluationReasons", "eventCapacity", "flushInterval", "samplingInterval", "allAttributesPrivate", "privateAttributes", "bootstrap", "diagnosticRecordingInterval", "diagnosticOptOut", "wrapperName", "wrapperVersion", "stateProvider", "application", "validator", "validated", "id", "validateTagValue", "inspectors", "allowedTagCharacters", "canonicalizeUrl", "tagValue", "match", "warn", "configuration", "emitter", "extraOptionDefs", "optionDefs", "deprecatedOptions", "reportArgumentError", "maybeReportError", "config", "opts", "typeDescForValue", "optionDef", "allowedTypes", "split", "getTags", "tags", "headers", "getLDHeaders", "h", "userAgentHeaderName", "tagKeys", "sort", "map", "flattened", "item", "concat", "transformHeaders", "v1", "uuidv1", "require$$1", "EventSender_1", "environmentId", "baseHeaders", "sender", "events", "isDiagnostic", "httpRequest", "resolve", "jsonBody", "payloadId", "doPostRequest", "canRetry", "result", "dateStr", "header", "time", "serverTime", "catch", "validKind", "encodeKey", "includes", "checkContext", "allowLegacyKey", "kindValid", "keyValid", "kinds", "filter", "every", "contextKey", "getContextKeys", "user", "entries", "getContextKinds", "getCanonicalKey", "EventSummarizer_1", "es", "startDate", "endDate", "counters", "contextKinds", "summarizeEvent", "counterKey", "variation", "counterVal", "Set", "contextKeys", "add", "creationDate", "getSummary", "flagsOut", "empty", "values", "flag", "counterOut", "unknown", "features", "clearSummary", "processEscapeCharacters", "getComponents", "reference", "component", "isLiteral", "compare", "aIsLiteral", "bIsLiteral", "bComponents", "aComponents", "literalToReference", "literal", "attributeReference", "cloneExcluding", "target", "references", "stack", "cloned", "excluded", "ptr", "source", "parent", "visited", "pop", "some", "ContextFilter_1", "protectedAttributes", "legacyTopLevelCopyAttributes", "filterSingleKind", "redactAnonymous", "AttributeReference", "anonymous", "_meta", "protectedAttr", "redactedAttributes", "filtered", "custom", "privateAttributeNames", "filteredContext", "EventProcessor_1", "diagnosticsAccumulator", "processor", "eventSender", "EventSender", "mainEventsUrl", "summarizer", "EventSummarizer", "contextFilter", "ContextFilter", "flushTimer", "queue", "lastKnownPastTime", "disabled", "exceededCapacity", "shouldSampleEvent", "makeOutputEvent", "addToOutbox", "incrementDroppedEvents", "enqueue", "addFullEvent", "addDebugEvent", "trackEvents", "debugEventsUntilDate", "debugEvent", "flush", "eventsToSend", "summary", "setEventsInLastBatch", "debug", "responseInfo", "flushTick", "stop", "clearTimeout", "EventEmitter_1", "on", "handler", "off", "emit", "copiedHandlers", "apply", "getEvents", "getEventListenerCount", "readyEvent", "successEvent", "failureEvent", "InitializationState", "eventEmitter", "succeeded", "failed", "failureValue", "initializationPromise", "readyPromise", "onReady", "getInitializationPromise", "onSuccess", "onFailure", "getReadyPromise", "signalSuccess", "signalFailure", "PersistentFlagStore_1", "storage", "environment", "hash", "ident", "store", "getFlagsKey", "getContext", "loadFlags", "get", "dataStr", "data", "schema", "$schema", "ex", "clearFlags", "saveFlags", "clear", "PersistentStorage_1", "localStorageProvider", "loggedError", "logError", "isEnabled", "undefined", "require$$2", "Stream_1", "stream", "evalUrlPrefix", "withReasons", "baseReconnectDelay", "connectionAttemptStartTime", "firstConnectionErrorLogged", "reconnectTimeoutReference", "handlers", "retryCount", "getNextRetryDelay", "delay", "computedDelayMillis", "backoff", "trunc", "handleError", "closeConnection", "logConnectionResult", "tryConnect", "openConnection", "query", "readTimeoutMillis", "eventSourceFactory", "eventSourceAllowsReport", "method", "body", "info", "addEventListener", "onerror", "onopen", "close", "success", "recordStreamInit", "connect", "newHash", "newHandlers", "disconnect", "isConnected", "eventSourceIsActive", "promiseCoalescer_1", "finallyFn", "currentPromise", "currentCancelFn", "finalResolve", "finalReject", "coalescer", "p", "cancelFn", "resultPromise", "jsonContentType", "Requestor_1", "requestor", "activeRequests", "fetchJSON", "endpoint", "promiseCoalescer", "req", "statusText", "addPromise", "cancel", "fetchFlagSettings", "Identity_1", "initialContext", "onChange", "setContext", "AnonymousContextProcessor_1", "persistentStorage", "getContextKeyIdString", "processSingleKindContext", "cachedId", "processContext", "processedContext", "all", "diagnosticEvents", "DiagnosticId", "sdkKey", "diagnosticId", "sdkKeySuffix", "DiagnosticsAccumulator", "startTime", "dataSinceDate", "droppedEvents", "eventsInLastBatch", "streamInits", "reset", "getProps", "setProps", "props", "timestamp", "durationMillis", "DiagnosticsManager", "accumulator", "combinedMode", "diagnosticUseCombinedEvent", "localStorageKey", "diagnosticEventsUrl", "periodicInterval", "eventSentTime", "periodicTimer", "streamingEnabled", "manager", "makeInitProperties", "sdk", "makeSdkData", "makeConfigData", "diagnosticPlatformData", "sendDiagnosticEvent", "sendPeriodicEvent", "currentTime", "createPeriodicEventAndReset", "saveProperties", "sdkData", "diagnosticSdkData", "customBaseURI", "customStreamURI", "customEventsURI", "eventsCapacity", "eventsFlushIntervalMillis", "reconnectTimeMillis", "streamingDisabled", "diagnosticRecordingIntervalMillis", "usingSecureMode", "bootstrapMode", "fetchGoalsDisabled", "fetchGoals", "localStorageAvailable", "nextEventTime", "timeNow", "setStreaming", "enabled", "SafeInspector_1", "inspector", "errorLogged", "wrapper", "synchronous", "InspectorTypes", "flagUsed", "flagDetailsChanged", "flagDetailChanged", "clientIdentityChanged", "freeze", "InspectorManager_1", "InspectorManager", "inspectorsByType", "synchronousInspectorsByType", "safeInspectors", "SafeInspector", "safeInspector", "hasListeners", "onFlagUsed", "flagKey", "detail", "onFlags", "onFlagChanged", "onIdentityChanged", "timedPromise_1", "taskName", "_res", "changeEvent", "internalChangeEvent", "src", "initialize", "env", "specifiedOptions", "createLogger", "EventEmitter", "initializationStateTracker", "InitializationStateTracker", "inspectorManager", "PersistentStorage", "localStorage", "diagnosticsEnabled", "diagnostics", "diagnosticsManager", "Stream", "eventProcessor", "EventProcessor", "Requestor", "useLocalStorage", "streamActive", "subscribedToChangeEvents", "streamForcedState", "inited", "closed", "firstEvent", "Identity", "enqueueEvent", "anonymousContextProcessor", "AnonymousContextProcessor", "persistentFlagStore", "PersistentFlagStore", "isDoNotTrack", "notifyInspectionFlagChanged", "newFlag", "getFlagDetail", "notifyInspectionFlagsChanged", "cur", "sendFlagEvent", "defaultValue", "includeReason", "variationIndex", "flagVersion", "trackReason", "reason", "verifyContext", "variationDetailInternal", "sendEvent", "includeReasonInEvent", "isAllFlags", "notifyInspection", "deleted", "errorKind", "prerequisites", "connectStream", "tryParseData", "jsonData", "ping", "contextAtTimeOfPingEvent", "requestedFlags", "replaceAllFlags", "put", "patch", "oldFlag", "mods", "newDetail", "previous", "current", "handleFlagChanges", "delete", "disconnectStream", "newFlags", "changes", "changeEventParams", "updateStreamingState", "shouldBeStreaming", "isChangeEventKey", "toUpperCase", "metadataKey", "validKey", "metadata", "state", "getInitialState", "initFromStateProvider", "validatedContext", "signalSuccessfulInit", "storedFlags", "signalFailedInit", "finishInit", "client", "waitForInitialization", "timeout", "initPromise", "timeoutPromise", "timedPromise", "race", "waitUntilReady", "identify", "onDone", "clearFirst", "flagValueMap", "variationDetail", "track", "metricValue", "customEventFilter", "getCurrentUrl", "contextKind", "haveListeners", "newState", "allFlags", "results", "finishClose", "getFlagsInternal", "getEnvironmentId", "internalChangeEventName", "_objectSpread", "emptyResult", "newHttpRequest", "pageIsClosing", "window", "navigator", "chromeMatch", "isSyncXhrSupported", "xhr", "XMLHttpRequest", "open", "setRequestHeader", "send", "cancelled", "getResponseHeader", "responseText", "abort", "escapeStringRegexp", "string", "doesUrlMatch", "matcher", "href", "search", "regex", "testUrl", "canonicalUrl", "pattern", "GoalTracker", "goals", "onEvent", "tracker", "listenerFn", "clickGoals", "goal", "urls", "location", "matches", "selector", "elements", "document", "querySelectorAll", "parentNode", "dispose", "removeEventListener", "GoalManager", "clientVars", "readyCallback", "goalTracker", "refreshGoalTracker", "sendGoalEvent", "g", "interval", "currentUrl", "previousUrl", "checkUrl", "poll", "fn", "history", "pushState", "common", "goalsEvent", "eventUrlTransformer", "disableSyncEventPost", "hasCors", "disableSyncFlush", "syncFlush", "synchronousFlush", "httpAllowsPost", "httpFallbackPing", "Image", "eventSourceConstructor", "doNotTrack", "msDoNotTrack", "getItem", "setItem", "removeItem", "EventSourcePolyfill", "supportedOptions", "EventSource", "timeoutMillis", "esOptions", "defaultOptions", "heartbeatTimeout", "silentTimeout", "skipDefaultHeaders", "readyState", "OPEN", "CONNECTING", "validatedOptions", "goalsPromise", "onGoals", "waitUntilGoalsReady", "visibilityState", "basicLogger", "importBasicLogger", "createConsoleLogger", "index"]
}
